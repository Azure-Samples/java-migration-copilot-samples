-- First, try to drop the table if it exists using a simple DROP statement
-- Spring will continue if this fails because of continue-on-error=true in application.yaml
DROP TABLE TODO_ITEMS;

-- Create the TODO_ITEMS table with Oracle specific data types
CREATE TABLE TODO_ITEMS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(4000),
    COMPLETED NUMBER(1) DEFAULT 0 NOT NULL,
    PRIORITY NUMBER(2) DEFAULT 1 NOT NULL,
    DUE_DATE TIMESTAMP,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    UPDATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX IDX_TODO_COMPLETED ON TODO_ITEMS(COMPLETED);
CREATE INDEX IDX_TODO_PRIORITY ON TODO_ITEMS(PRIORITY);
CREATE INDEX IDX_TODO_DUE_DATE ON TODO_ITEMS(DUE_DATE);

-- Comments
COMMENT ON TABLE TODO_ITEMS IS 'Stores todo items and their details';
COMMENT ON COLUMN TODO_ITEMS.ID IS 'Unique identifier for the todo item';
COMMENT ON COLUMN TODO_ITEMS.TITLE IS 'Title of the todo item';
COMMENT ON COLUMN TODO_ITEMS.DESCRIPTION IS 'Detailed description of the todo item';
COMMENT ON COLUMN TODO_ITEMS.COMPLETED IS 'Flag indicating if the todo item is completed (1) or not (0)';
COMMENT ON COLUMN TODO_ITEMS.PRIORITY IS 'Priority level of the todo item (higher number means higher priority)';
COMMENT ON COLUMN TODO_ITEMS.DUE_DATE IS 'Date and time when the todo item is due';
COMMENT ON COLUMN TODO_ITEMS.CREATED_AT IS 'Timestamp when the todo item was created';
COMMENT ON COLUMN TODO_ITEMS.UPDATED_AT IS 'Timestamp when the todo item was last updated';
