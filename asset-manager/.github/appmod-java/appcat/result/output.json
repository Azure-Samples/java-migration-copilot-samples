[
  {
    "name": "azure/springboot",
    "description": "Recommend Spring Boot open source support version",
    "violations": {
      "azure-aws-config-region-02000": {
        "description": "AWS region configuration",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=region-configuration",
          "source-category=aws-region-configuration",
          "AWS"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/config/AwsS3Config.java",
            "message": "The application contains AWS region configuration.\n\n * Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n * Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.",
            "lineNumber": 21,
            "variables": {
              "matchingText": "aws.region"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The application contains AWS region configuration.\n\n * Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n * Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.",
            "lineNumber": 6,
            "variables": {
              "matchingText": "aws.region"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/config/AwsS3Config.java",
            "message": "The application contains AWS region configuration.\n\n * Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n * Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.",
            "lineNumber": 19,
            "variables": {
              "matchingText": "aws.region"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The application contains AWS region configuration.\n\n * Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n * Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.",
            "lineNumber": 4,
            "variables": {
              "matchingText": "aws.region"
            }
          }
        ],
        "links": [
          {
            "url": "https://azure.microsoft.com/explore/global-infrastructure/geographies",
            "title": "Azure geographies"
          }
        ],
        "effort": 1
      },
      "azure-aws-config-s3-03000": {
        "description": "AWS S3 usage found",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=storage-migration",
          "source-category=aws-s3",
          "AWS",
          "storage"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 7,
            "variables": {
              "matchingText": "aws.s3"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 5,
            "variables": {
              "matchingText": "aws.s3"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\AwsS3Config.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\AwsS3Config.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.S3Client",
              "package": "com.microsoft.migration.assets.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 15,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.model.*",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 14,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.S3Client",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\AwsS3Config.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\AwsS3Config.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.S3Client",
              "package": "com.microsoft.migration.assets.worker.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 12,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.model.PutObjectRequest",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.S3Client",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 11,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.model.GetUrlRequest",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "software.amazon.awssdk.services.s3.model.GetObjectRequest",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/storage/blobs",
            "title": "Azure Blob Storage documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java",
            "title": "Quickstart: Azure Blob Storage client library for Java"
          },
          {
            "url": "https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy",
            "title": "Move your data from AWS S3 to Azure Storage using AzCopy"
          }
        ],
        "effort": 3
      },
      "azure-aws-config-s3-03001": {
        "description": "AWS S3 dependency usage found",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=storage-migration",
          "source-category=aws-s3",
          "AWS",
          "storage"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "The application contains AWS S3 dependency usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 31,
            "variables": {
              "name": "software.amazon.awssdk.s3",
              "version": "2.25.13"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "The application contains AWS S3 dependency usage. Consider using Azure Blob Storage instead.\n\n * Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n * **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n * **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n * **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n * Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n * Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.",
            "lineNumber": 35,
            "variables": {
              "name": "software.amazon.awssdk.s3",
              "version": "2.25.13"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/storage/blobs",
            "title": "Azure Blob Storage documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java",
            "title": "Quickstart: Azure Blob Storage client library for Java"
          },
          {
            "url": "https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy",
            "title": "Move your data from AWS S3 to Azure Storage using AzCopy"
          }
        ],
        "effort": 3
      },
      "azure-database-postgresql-02000": {
        "description": "PostgreSQL database found",
        "category": "potential",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=database-migration",
          "source-category=postgresql",
          "database",
          "postgresql"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.",
            "lineNumber": 64,
            "variables": {
              "name": "org.postgresql.postgresql",
              "version": "42.3.8"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.",
            "lineNumber": 53,
            "variables": {
              "name": "org.postgresql.postgresql",
              "version": "42.3.8"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.",
            "lineNumber": 20,
            "variables": {
              "matchingText": "jdbc:postgresql"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.",
            "lineNumber": 17,
            "variables": {
              "matchingText": "jdbc:postgresql"
            }
          },
          {
            "uri": "",
            "message": "To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability."
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/postgresql/flexible-server",
            "title": "Azure PostgreSQL Flexible Server documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/dms",
            "title": "Azure Database Migration Service documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/azure-monitor",
            "title": "Azure Monitor documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/defender-for-cloud",
            "title": "Microsoft Defender for Cloud"
          },
          {
            "url": "https://learn.microsoft.com/azure/postgresql/single-server/concepts-backup",
            "title": "Backup and restore in Azure Database for PostgreSQL"
          }
        ],
        "effort": 3
      },
      "azure-java-version-02000": {
        "description": "Legacy Java version",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=java-modernization",
          "category=java-version-upgrade",
          "version"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/pom.xml",
            "message": "The application is using an old Java version. It is strongly recommended to plan and execute a migration strategy to upgrade your application to a newer supported Java version.\nOlder Java versions may have known security vulnerabilities that can expose your application and infrastructure to potential attacks. Migrating to a supported version ensures that you benefit from the latest security patches and updates.",
            "lineNumber": 19,
            "variables": {
              "data": "java.version",
              "innerText": "8",
              "matchingXML": "8"
            }
          }
        ],
        "effort": 3
      },
      "azure-message-queue-amqp-02000": {
        "description": "Spring AMQP dependency found",
        "category": "optional",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=messaging-service-migration",
          "source-category=spring-amqp-rabbitmq",
          "message-queue",
          "AMQP Client"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "The application uses Spring AMQP dependency. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.boot.spring-boot-starter-amqp",
              "version": "2.7.18"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "The application uses Spring AMQP dependency. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 31,
            "variables": {
              "name": "org.springframework.boot.spring-boot-starter-amqp",
              "version": "2.7.18"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/service-bus-messaging",
            "title": "Azure Service Bus documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications",
            "title": "Use Azure Service Bus in Spring applications"
          }
        ],
        "effort": 5
      },
      "azure-message-queue-config-rabbitmq-01000": {
        "description": "RabbitMQ connection string, username or password found in configuration file",
        "category": "optional",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=messaging-service-migration",
          "source-category=spring-amqp-rabbitmq",
          "message-queue",
          "RabbitMQ Client"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 14,
            "variables": {
              "matchingText": "rabbitmq.host"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 16,
            "variables": {
              "matchingText": "rabbitmq.username"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 17,
            "variables": {
              "matchingText": "rabbitmq.password"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 11,
            "variables": {
              "matchingText": "rabbitmq.host"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 13,
            "variables": {
              "matchingText": "rabbitmq.username"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n \n * **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 14,
            "variables": {
              "matchingText": "rabbitmq.password"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/service-bus-messaging",
            "title": "Azure Service Bus documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/service-connector/quickstart-portal-container-apps",
            "title": "Service connection in Azure Container Apps"
          },
          {
            "url": "https://learn.microsoft.com/azure/developer/intro/passwordless-overview",
            "title": "Passwordless connections for Azure services"
          }
        ],
        "effort": 5
      },
      "azure-message-queue-rabbitmq-01000": {
        "description": "Spring RabbitMQ usage found in code",
        "category": "optional",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=messaging-service-migration",
          "source-category=spring-amqp-rabbitmq",
          "message-queue",
          "RabbitMQ Client"
        ],
        "incidents": [
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 3,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.EnableRabbit",
              "package": "com.microsoft.migration.assets"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.connection.ConnectionFactory",
              "package": "com.microsoft.migration.assets.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory",
              "package": "com.microsoft.migration.assets.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 8,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.core.RabbitTemplate",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\BackupMessageProcessor.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 6,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\BackupMessageProcessor.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.RabbitListener",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 7,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.core.RabbitTemplate",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 3,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.EnableRabbit",
              "package": "com.microsoft.migration.assets.worker"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory",
              "package": "com.microsoft.migration.assets.worker.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.connection.ConnectionFactory",
              "package": "com.microsoft.migration.assets.worker.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
            "message": "The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n * Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n * Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n * Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.",
            "lineNumber": 7,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.RabbitListener",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/service-bus-messaging",
            "title": "Azure Service Bus documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications",
            "title": "Use Azure Service Bus in Spring applications"
          }
        ],
        "effort": 5
      },
      "azure-password-01000": {
        "description": "Password found in configuration file",
        "category": "potential",
        "labels": [
          "konveyor.io/source=springboot",
          "konveyor.io/source=eap7",
          "konveyor.io/source=eap",
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "domain=cloud-native",
          "category=local-credential",
          "password",
          "security"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n * **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n * **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 17,
            "variables": {
              "matchingText": "password"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n * **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n * **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 22,
            "variables": {
              "matchingText": "password"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n * **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n * **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 14,
            "variables": {
              "matchingText": "password"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n * **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n * **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.",
            "lineNumber": 19,
            "variables": {
              "matchingText": "password"
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/azure/key-vault",
            "title": "Azure Key Vault documentation"
          },
          {
            "url": "https://learn.microsoft.com/azure/developer/intro/passwordless-overview",
            "title": "Passwordless connections for Azure services"
          },
          {
            "url": "https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-container-apps#inventory-configuration-sources-and-secrets",
            "title": "Password found in configuration file"
          },
          {
            "url": "https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault",
            "title": "Read a secret from Azure Key Vault in a Spring Boot application"
          },
          {
            "url": "https://search.maven.org/artifact/com.azure.spring/azure-spring-boot-starter-keyvault-secrets",
            "title": "Azure Spring Boot Starter for Azure Key Vault Secrets"
          }
        ],
        "effort": 3
      },
      "database-reliability-01000": {
        "description": "Consider database reliability when migrating to Azure",
        "category": "optional",
        "labels": [
          "konveyor.io/target=azure-appservice",
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=azure-readiness",
          "category=database-migration"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "To migrate a Java application that uses a database to Azure, we recommend reviewing your architecture for cloud readiness and resilience. \nThe following best practices will help improve reliability and avoid common pitfalls:\n\n* **Review and configure all timeout settings** (e.g., connection, socket, and transaction timeouts) based on real-world load and runtime behavior. Avoid hardcoding fixed values without load testing or telemetry.\n* **Avoid infinite or excessively long timeouts.** Instead, favor \"fail fast\" patterns with proper error handling and retries where appropriate.\n* **Lower default transaction timeouts,** especially for frameworks using JTA or other global transaction coordinators, to prevent long blocking under failure or overload conditions.\n* **Implement exponential backoff** in client retry logic instead of fixed retry intervals. This helps reduce pressure on the system during partial outages and speeds up recovery by minimizing cascading retry storms.\n* **Do not assume the database will always be available.** Cloud environments are inherently distributed and failure-prone. Design your application for transient failures, throttling, and restarts.\n\nConsider re-evaluating assumptions in your database interaction layer to ensure your application behaves reliably under cloud-native environments.",
            "variables": {
              "tags": [
                "PostgreSQL Driver"
              ]
            }
          }
        ],
        "links": [
          {
            "url": "https://learn.microsoft.com/sql/connect/jdbc/understand-timeouts",
            "title": "Understanding timeout properties in the JDBC driver"
          },
          {
            "url": "https://learn.microsoft.com/sql/connect/jdbc/setting-the-connection-properties",
            "title": "Setting the connection properties"
          },
          {
            "url": "https://learn.microsoft.com/sql/connect/jdbc/managing-transaction-size",
            "title": "Managing transaction size"
          },
          {
            "url": "https://learn.microsoft.com/azure/architecture/patterns/retry",
            "title": "Retry pattern"
          },
          {
            "url": "https://www.learntocodetogether.com/retry-exponential-back-off/",
            "title": "Implementing retries with exponential backoff"
          },
          {
            "url": "https://learn.microsoft.com/azure/architecture/best-practices/transient-faults",
            "title": "Transient fault handling"
          }
        ],
        "effort": 3
      }
    },
    "unmatched": [
      "azure-aws-config-sqs-04000",
      "azure-aws-config-sqs-04002",
      "azure-aws-config-sqs-04003",
      "azure-aws-config-sqs-04001",
      "azure-aws-config-s3-03002",
      "azure-aws-config-sqs-04004",
      "azure-file-system-02000",
      "azure-file-system-03000",
      "azure-keystore-certificates-02000",
      "azure-keystore-certificates-01000",
      "azure-aws-config-secret-manager-05000",
      "azure-message-queue-config-kafka-01000",
      "azure-message-queue-spring-jms-rabbitmq-01000",
      "azure-message-queue-config-artemis-01000",
      "azure-java-version-01000",
      "azure-aws-config-credential-01000",
      "eap-to-azure-appservice-pom-001",
      "spring-boot-to-azure-config-server-02000",
      "spring-boot-to-azure-config-server-03000",
      "azure-message-queue-activemq-01000",
      "azure-system-config-01000",
      "azure-tas-binding-01000",
      "spring-boot-to-azure-config-server-01000",
      "spring-boot-to-azure-schedule-job-01000",
      "spring-boot-to-azure-spring-boot-version-01000",
      "azure-database-config-mongodb-02000",
      "spring-boot-to-azure-spring-boot-version-02000",
      "spring-boot-to-azure-spring-boot-version-03000",
      "spring-boot-to-azure-spring-cloud-version-01000",
      "spring-boot-to-azure-spring-cloud-version-02000",
      "spring-boot-to-azure-eureka-01000",
      "spring-boot-to-azure-eureka-02000",
      "spring-boot-to-azure-eureka-03000",
      "spring-boot-to-azure-port-01000",
      "azure-cache-redis-01000",
      "apm-00001",
      "apm-00002",
      "azure-database-microsoft-mariadb-06000",
      "azure-database-microsoft-sql-03000",
      "spring-boot-to-azure-openfeign-01000",
      "spring-boot-to-azure-key-vault-01000",
      "auth-02000",
      "apm-00003",
      "auth-00000",
      "openliberty-database-00002",
      "azure-database-mysql-01000",
      "azure-database-microsoft-mongodb-05000",
      "openliberty-database-00005",
      "auth-01000",
      "auth-03000",
      "openliberty-database-00004",
      "openliberty-database-00006",
      "openliberty-database-00007",
      "auth-04000",
      "openliberty-filesystem-00003",
      "openliberty-database-00001",
      "azure-database-microsoft-oracle-07000",
      "openliberty-jms-00002",
      "openliberty-jms-00003",
      "openliberty-database-00003",
      "openliberty-filesystem-00004",
      "openliberty-jms-00005",
      "azure-database-microsoft-cassandra-04000",
      "openliberty-filesystem-00001",
      "openliberty-database-00008",
      "openliberty-jms-00001",
      "openliberty-jms-00006",
      "openliberty-logging-00001",
      "openliberty-database-00009",
      "openliberty-logging-00002",
      "openliberty-filesystem-00002",
      "openliberty-jms-00004",
      "eap-to-azure-appservice-datasource-driver-01000"
    ],
    "skipped": [
      "spring-boot-to-azure-restricted-config-01000"
    ]
  },
  {
    "name": "camel3",
    "description": "Rules for changes between Camel 3.0 and Camel 4.0",
    "skipped": [
      "xml-removed-camel4-00001",
      "xml-removed-camel4-00002",
      "xml-removed-camel4-00003",
      "xml-removed-camel4-00004",
      "xml-removed-camel4-00005",
      "xml-removed-camel4-00006",
      "xml-removed-camel4-00007",
      "xml-removed-camel4-00008",
      "xml-removed-camel4-00010",
      "xml-removed-camel4-00011",
      "xml-removed-camel4-00012",
      "xml-removed-camel4-00013",
      "xml-removed-camel4-00014",
      "xml-removed-camel4-00015",
      "xml-removed-camel4-00016",
      "xml-removed-camel4-00017",
      "xml-removed-camel4-00018",
      "xml-removed-camel4-00019",
      "xml-removed-camel4-00020",
      "xml-removed-camel4-00021",
      "xml-removed-camel4-00022",
      "xml-removed-camel4-00023",
      "xml-removed-camel4-00024",
      "xml-removed-camel4-00025",
      "xml-removed-camel4-00026",
      "xml-removed-camel4-00027",
      "xml-removed-camel4-00028",
      "xml-removed-camel4-00029",
      "xml-removed-camel4-00030",
      "xml-removed-camel4-00031",
      "xml-removed-camel4-00032",
      "xml-removed-camel4-00033",
      "xml-removed-camel4-00034",
      "xml-changedcomponent-camel4-00001",
      "xml-changedcomponent-camel4-00002",
      "xml-removed-camel41-00000",
      "xml-removed-camel41-00001",
      "xml-removed-camel41-00002",
      "xml-changed-camel41-00003",
      "xml-changed-camel41-00004",
      "xml-changed-camel41-00005",
      "xml-changed-camel41-00006",
      "xml-changed-camel41-00007",
      "xml-changed-camel41-00008",
      "xml-changed-camel41-00009",
      "xml-changed-camel41-00010",
      "xml-changed-camel41-00011",
      "xml-changed-camel41-00012",
      "xml-changed-camel41-00013",
      "xml-changed-camel41-00014",
      "xml-changed-camel41-00015",
      "xml-removed-camel41-00016",
      "xml-removed-camel41-00017",
      "xml-removed-camel41-00018"
    ]
  },
  {
    "name": "camel3/camel2",
    "description": "Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3",
    "skipped": [
      "component-changes-00001",
      "component-changes-00002",
      "component-changes-00003",
      "component-changes-00004",
      "component-changes-00005",
      "component-changes-00006",
      "component-changes-00007",
      "component-changes-00008",
      "component-changes-00009",
      "component-changes-00010",
      "component-changes-00011",
      "component-changes-00012",
      "component-changes-00013",
      "component-changes-00014",
      "component-changes-00015",
      "component-changes-00016",
      "component-changes-00017",
      "component-changes-00018",
      "component-changes-00019",
      "java-dsl-changes-00001",
      "java-generic-information-00034",
      "java-generic-information-00035",
      "java-generic-information-00036",
      "java-generic-information-00037",
      "java-generic-information-00038",
      "java-generic-information-00039",
      "java-generic-information-00040",
      "java-generic-information-00041",
      "java-generic-information-00042",
      "java-generic-information-00043",
      "java-generic-information-00044",
      "java-generic-information-00000",
      "java-generic-information-00001",
      "java-generic-information-00002",
      "java-generic-information-00004",
      "java-generic-information-00005",
      "java-generic-information-00006",
      "java-generic-information-00008",
      "java-generic-information-00009",
      "java-generic-information-00010",
      "java-generic-information-00011",
      "java-generic-information-00012",
      "java-generic-information-00013",
      "java-generic-information-00014",
      "java-generic-information-00015",
      "java-generic-information-00016",
      "java-generic-information-00017",
      "java-generic-information-00018",
      "java-generic-information-00019",
      "java-generic-information-00021",
      "java-generic-information-00022",
      "java-generic-information-00023",
      "java-generic-information-00024",
      "java-generic-information-00025",
      "java-generic-information-00026",
      "java-generic-information-00027",
      "java-generic-information-00028",
      "java-generic-information-00029",
      "java-generic-information-00030",
      "java-generic-information-00031",
      "java-generic-information-00032",
      "java-generic-information-00033",
      "java-generic-information-00045",
      "java-generic-information-00046",
      "java-generic-information-00048",
      "java-generic-information-00049",
      "java-generic-information-00050",
      "java-generic-information-00051",
      "java-generic-information-00052",
      "java-multiple-camelcontexts-per-application-not-supported-00000",
      "java-multiple-camelcontexts-per-application-not-supported-00001",
      "classes-removed-camel31-00001",
      "xml-removed-camel31-00001",
      "xml-removed-camel31-00002",
      "xml-moved-camel31-00001",
      "xml-moved-camel31-00002",
      "xml-moved-camel31-00003",
      "xml-removed-camel310-00001",
      "properties-removed-camel310-00002",
      "properties-removed-camel310-00003",
      "properties-removed-camel310-00004",
      "properties-removed-camel310-00005",
      "properties-removed-camel310-00006",
      "properties-removed-camel310-00007",
      "properties-removed-camel310-00008",
      "properties-removed-camel310-00009",
      "properties-removed-camel310-00010",
      "properties-removed-camel310-00011",
      "properties-removed-camel310-00012",
      "properties-removed-camel310-00013",
      "xml-removed-camel311-00001",
      "xml-changed-camel311-00001",
      "properties-removed-camel311-00001",
      "properties-removed-camel311-00002",
      "xml-removed-camel312-00001",
      "xml-removed-camel312-00002",
      "xml-removed-camel312-00003",
      "xml-removed-camel312-00004",
      "xml-removed-camel313-00001",
      "xml-removed-camel313-00003",
      "xml-314-00001",
      "xml-315-00001",
      "xml-removed-camel315-00001",
      "xml-removed-camel315-00002",
      "properties-removed-camel315-00001",
      "properties-removed-camel315-00002",
      "properties-removed-camel315-00003",
      "properties-removed-camel315-00004",
      "properties-removed-camel315-00005",
      "properties-removed-camel315-00006",
      "properties-removed-camel315-00007",
      "properties-removed-camel315-00008",
      "properties-removed-camel315-00009",
      "properties-removed-camel315-00010",
      "properties-removed-camel315-00011",
      "properties-removed-camel315-00012",
      "properties-removed-camel315-00013",
      "properties-removed-camel315-00014",
      "properties-removed-camel315-00015",
      "xml-removed-camel316-00001",
      "xml-removed-camel316-00002",
      "xml-removed-camel317-00001",
      "xml-removed-camel317-00002",
      "xml-removed-camel317-00003",
      "xml-removed-camel317-00004",
      "xml-removed-camel317-00005",
      "xml-removed-camel317-00006",
      "xml-removed-camel317-00007",
      "xml-removed-camel317-00008",
      "xml-removed-camel317-00009",
      "xml-removed-camel317-00010",
      "xml-removed-camel317-00011",
      "xml-removed-camel317-00012",
      "xml-removed-camel317-00013",
      "xml-removed-camel317-00014",
      "xml-removed-camel317-00015",
      "xml-removed-camel317-00016",
      "xml-removed-camel317-00017",
      "xml-legacy-camel317-00001",
      "xml-legacy-camel317-00002",
      "xml-legacy-camel317-00003",
      "xml-legacy-camel317-00004",
      "xml-removed-camel318-00001",
      "xml-removed-camel318-00002",
      "xml-removed-camel318-00003",
      "xml-removed-camel318-00004",
      "xml-removed-camel319-00001",
      "xml-removed-camel319-00002",
      "xml-removed-camel319-00003",
      "xml-removed-camel319-00004",
      "xml-removed-camel319-00005",
      "xml-removed-camel319-00006",
      "jndiregistry-removed-camel32-00001",
      "xml-removed-camel32-00001",
      "xml-removed-camel32-00002",
      "xml-removed-camel32-00003",
      "xml-removed-camel32-00004",
      "xml-removed-camel32-00005",
      "xml-removed-camel32-00006",
      "xml-removed-camel32-00007",
      "xml-removed-camel32-00008",
      "xml-moved-camel32-00003",
      "xml-moved-camel32-00004",
      "xml-moved-camel32-00005",
      "xml-removed-camel32-00010",
      "xml-changed-camel320-00001",
      "xml-changed-camel320-00002",
      "xml-changed-camel320-00003",
      "xml-changed-camel320-00004",
      "xml-changed-camel320-00005",
      "xml-changed-camel321-00001",
      "xml-changed-camel321-00002",
      "xml-changed-camel321-00003",
      "xml-changed-camel321-00004",
      "xml-changed-camel321-00005",
      "java-camel33-00001",
      "xml-removed-camel34-00001",
      "xml-moved-camel34-00001",
      "xml-removed-camel35-00001",
      "java-camel36-00001",
      "xml-removed-camel36-00001",
      "java-generic-information-camel37-00000",
      "java-generic-information-camel37-00001",
      "java-generic-information-camel37-00002",
      "java-generic-information-camel37-00003",
      "java-generic-information-camel37-00004",
      "java-generic-information-camel37-00005",
      "java-generic-information-camel37-00006",
      "java-generic-information-camel37-00007",
      "java-generic-information-camel37-00007-01",
      "java-generic-information-camel37-00008",
      "java-generic-information-camel37-00009",
      "java-generic-information-camel37-00010",
      "java-generic-information-camel37-00011",
      "java-generic-information-camel37-00012",
      "java-generic-information-camel37-00013",
      "java-generic-information-camel37-00014",
      "java-generic-information-camel37-00015",
      "java-generic-information-camel37-00016",
      "properties-removed-camel38-00001",
      "properties-removed-camel38-00002",
      "properties-removed-camel38-00003",
      "xml-removed-camel39-00002",
      "xml-removed-camel39-00004",
      "xml-removed-camel39-00005",
      "xml-removed-camel39-00006",
      "xml-removed-camel39-00007",
      "xml-removed-camel39-00008",
      "xml-removed-camel39-00009",
      "xml-removed-camel39-00010",
      "xml-removed-camel39-00011",
      "xml-removed-camel39-00012",
      "xml-removed-camel39-00013",
      "xml-removed-camel39-00014",
      "xml-removed-camel39-00015",
      "xml-removed-camel39-00016",
      "xml-removed-camel39-00017",
      "xml-removed-camel39-00018",
      "xml-removed-camel39-00019",
      "xml-removed-camel39-00020",
      "xml-dsl-changes-00001",
      "xml-dsl-changes-00002",
      "xml-dsl-changes-00003",
      "xml-dsl-changes-00004",
      "xml-dsl-changes-00005",
      "xml-dsl-changes-00006",
      "xml-dsl-changes-00007",
      "xml-dsl-changes-00008",
      "xml-dsl-changes-00009",
      "xml-java-versions-00001",
      "xml-java-versions-00002",
      "xml-java-versions-00003",
      "xml-moved-components-00012",
      "xml-moved-components-00013",
      "xml-moved-components-00014",
      "xml-moved-components-00015",
      "xml-removed-components-00000",
      "xml-removed-components-00001",
      "xml-removed-components-00002",
      "xml-removed-components-00003",
      "xml-removed-components-00004",
      "xml-removed-components-00005",
      "xml-removed-components-00006",
      "xml-removed-components-00007",
      "xml-removed-components-00008",
      "xml-removed-components-00005-01",
      "xml-removed-components-00007-01",
      "xml-removed-components-00008-01",
      "xml-renamed-components-00000",
      "xml-renamed-components-00001",
      "xml-renamed-components-00002",
      "xml-renamed-components-00003",
      "xml-renamed-components-00004",
      "xml-renamed-components-00005",
      "xml-renamed-components-00006",
      "xml-renamed-components-00007",
      "xml-renamed-components-00008",
      "xml-renamed-components-00009",
      "xml-renamed-components-00010",
      "xml-renamed-components-00011",
      "xml-renamed-components-00012",
      "xml-renamed-components-00013",
      "xml-renamed-components-00014",
      "xml-renamed-components-00015",
      "xml-renamed-components-00016",
      "xml-renamed-components-00017",
      "xml-renamed-components-00018",
      "xml-renamed-components-000019",
      "xml-renamed-components-000020",
      "xml-renamed-components-00021",
      "xml-renamed-components-00022",
      "xml-renamed-components-000023",
      "xml-renamed-components-000024",
      "xml-renamed-components-00025",
      "xml-renamed-components-00026",
      "xml-renamed-components-000027",
      "xml-renamed-components-000028",
      "xml-renamed-components-000029"
    ]
  },
  {
    "name": "cloud-readiness",
    "description": "This ruleset detects logging configurations that may be problematic when migrating an application to a cloud environment.",
    "violations": {
      "dockerfile-00000": {
        "description": "No Dockerfile found",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=azure-aks",
          "konveyor.io/target=azure-container-apps",
          "konveyor.io/source",
          "domain=cloud-native",
          "category=docker-containerization",
          "containerization"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "No Dockerfile was found in the project. This suggests the application may not yet be containerized. \nConsider creating a Dockerfile to enable container-based replatforming to Azure services such as Azure Container Apps or AKS."
          }
        ],
        "links": [
          {
            "url": "https://www.baeldung.com/java-dockerize-app",
            "title": "Dockerizing a Java Application"
          }
        ],
        "effort": 1
      },
      "local-storage-00005": {
        "description": "File system - Java NIO",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=cloud-readiness",
          "konveyor.io/source",
          "domain=cloud-native",
          "category=file-system-management",
          "source-category=local-file-system",
          "storage",
          "containerization"
        ],
        "incidents": [
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 17,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
              "kind": "Module",
              "name": "java.nio.file.attribute.BasicFileAttributes",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 17,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Path",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 16,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Files",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\FileProcessor.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 3,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\FileProcessor.java",
              "kind": "Module",
              "name": "java.nio.file.Path",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 7,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Files",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 8,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Path",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Paths",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.StandardCopyOption",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 16,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Path",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 15,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.Files",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 17,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\S3FileProcessingService.java",
              "kind": "Module",
              "name": "java.nio.file.StandardCopyOption",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 36,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
              "kind": "Method",
              "name": "processImage",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 43,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
              "kind": "Method",
              "name": "init",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.\n An application running inside a container could lose access to a file in local storage.\n\n The following recommendations depend on the function of the file in local storage:\n\n * Determine the **storage needs** for your application: Ephemeral storage or persistent storage. Ephemeral storage only persists until the cloud environment is restarted. Persistent storage is required for data that needs to persist across restarts.\n \n * If persistent storage is needed, consider **mounting Azure File Share** or **using Azure Blob Storage**. Mount Azure file share allows your application to access files via the mount location. Azure blob storage is a scalable object store for data objects, such as text or binary files.\n\n * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n * **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.",
            "lineNumber": 27,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Method",
              "name": "init",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          }
        ],
        "effort": 3
      },
      "localhost-00004": {
        "description": "Localhost Usage",
        "category": "optional",
        "labels": [
          "konveyor.io/target=cloud-readiness",
          "konveyor.io/source",
          "domain=cloud-native",
          "category=local-resource-access",
          "source-category=localhost",
          "localhost",
          "containerization"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The app is trying to use localhost, please try to migrate the resource to cloud",
            "lineNumber": 14,
            "variables": {
              "matchingText": "localhost"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The app is trying to use localhost, please try to migrate the resource to cloud",
            "lineNumber": 11,
            "variables": {
              "matchingText": "localhost"
            }
          }
        ],
        "effort": 7
      },
      "localhost-jdbc-00002": {
        "description": "Local JDBC Calls",
        "category": "mandatory",
        "labels": [
          "konveyor.io/target=cloud-readiness",
          "konveyor.io/source",
          "domain=cloud-native",
          "category=local-resource-access",
          "source-category=localhost",
          "localhost",
          "containerization"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "The app is trying to access local resource by JDBC, please try to migrate the resource to cloud",
            "lineNumber": 20,
            "variables": {
              "matchingText": "jdbc:postgresql://localhost:5432"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "The app is trying to access local resource by JDBC, please try to migrate the resource to cloud",
            "lineNumber": 17,
            "variables": {
              "matchingText": "jdbc:postgresql://localhost:5432"
            }
          }
        ],
        "effort": 7
      }
    },
    "unmatched": [
      "embedded-cache-01000",
      "embedded-cache-02000",
      "embedded-cache-03000",
      "embedded-cache-04000",
      "embedded-cache-05000",
      "embedded-cache-07000",
      "embedded-cache-15000",
      "embedded-cache-06000",
      "embedded-cache-08000",
      "java-corba-00000",
      "java-rmi-00000",
      "java-rmi-00001",
      "java-rpc-00000",
      "jni-native-code-00000",
      "embedded-cache-09000",
      "embedded-cache-10000",
      "local-storage-00002",
      "embedded-cache-11000",
      "embedded-cache-12000",
      "jni-native-code-00001",
      "embedded-cache-13000",
      "embedded-cache-14000",
      "embedded-cache-16000",
      "jca-00000",
      "local-storage-00006",
      "local-storage-00001",
      "logging-0001",
      "logging-0000",
      "local-storage-00004",
      "local-storage-00003",
      "localhost-http-00001",
      "localhost-ws-00003",
      "socket-communication-00000",
      "socket-communication-00001",
      "session-00001",
      "logging-0002",
      "logging-0003",
      "logging-0004",
      "logging-0005",
      "web-10000",
      "web-11000",
      "windows-registry-00000",
      "hardcoded-urls-00002",
      "hardcoded-urls-00001",
      "mail-00000",
      "clustering-00000",
      "unsecure-network-protocol-00000",
      "webform-auth-00000",
      "external-config-00000"
    ]
  },
  {
    "name": "discovery-rules",
    "tags": [
      "Maven XML",
      "Java Source",
      "Properties"
    ],
    "insights": {
      "discover-java-files": {
        "description": "Java source files",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Java Source"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/AssetsManagerApplication.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/config/AwsS3Config.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/config/RabbitConfig.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/controller/HomeController.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/controller/S3Controller.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/model/ImageMetadata.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/model/ImageProcessingMessage.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/model/S3StorageItem.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/repository/ImageMetadataRepository.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/service/AwsS3Service.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/service/BackupMessageProcessor.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/service/LocalFileStorageService.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/java/com/microsoft/migration/assets/service/StorageService.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/WorkerApplication.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/config/AwsS3Config.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/config/RabbitConfig.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/model/ImageMetadata.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/model/ImageProcessingMessage.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/repository/ImageMetadataRepository.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/service/AbstractFileProcessingService.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/service/FileProcessor.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/service/LocalFileProcessingService.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/service/S3FileProcessingService.java",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/java/com/microsoft/migration/assets/worker/util/StorageUtil.java",
            "message": ""
          }
        ]
      },
      "discover-maven-xml": {
        "description": "Maven XML file",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Maven XML"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/pom.xml",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": ""
          }
        ]
      },
      "discover-properties-file": {
        "description": "Properties file",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Properties"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": ""
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": ""
          }
        ]
      }
    },
    "unmatched": [
      "discover-gradle-xml",
      "discover-manifest-file",
      "discover-gradle-kts",
      "discover-ejb-configuration",
      "discover-spring-configuration",
      "discover-web-configuration",
      "discover-jpa-configuration",
      "discover-license",
      "hardcoded-ip-address"
    ]
  },
  {
    "name": "droolsjbpm",
    "description": "This ruleset provides help for migrating to a unified KIE (Knowledge Is Everything) API in the upgrade from version 5 to 6.",
    "skipped": [
      "kie-api-01000",
      "kie-api-01001",
      "kie-api-01002",
      "kie-api-01003",
      "kie-api-01004",
      "kie-api-01005",
      "kie-api-01006",
      "kie-api-01007",
      "kie-api-01008",
      "kie-api-01009",
      "kie-api-01010",
      "kie-api-01011",
      "kie-api-01012",
      "kie-api-01013",
      "kie-api-01014",
      "kie-api-01015",
      "kie-api-01016"
    ]
  },
  {
    "name": "eap6/java-ee/seam",
    "description": "This ruleset provides generic migration knowledge from the Seam 2 UI controls to pure JSF 2 UI Controls",
    "skipped": [
      "commonj-01000",
      "commonj-04000",
      "commonj-02000",
      "commonj-03000",
      "commonj-05000",
      "commonj-06000",
      "commonj-07000",
      "xml-glassfish-01000",
      "xml-glassfish-02000",
      "xml-glassfish-03000",
      "java-ee-jaxrpc-00000",
      "seam-java-00000",
      "seam-java-00170",
      "seam-java-00010",
      "seam-java-00030",
      "seam-java-00040",
      "seam-java-00050",
      "seam-java-00060",
      "seam-java-00061",
      "seam-java-00070",
      "seam-java-00071",
      "seam-java-00080",
      "seam-java-00090",
      "seam-java-00091",
      "seam-java-00100",
      "seam-java-00110",
      "seam-java-00120",
      "seam-java-00130",
      "seam-java-00140",
      "seam-java-00150",
      "seam-java-00160",
      "seam-java-00180",
      "seam-java-00190",
      "seam-java-00200",
      "seam-java-00210",
      "seam-java-00220",
      "seam-java-00230",
      "seam-java-00240",
      "seam-java-00250",
      "seam-java-00260",
      "seam-java-00270",
      "seam-ui-jsf-00001",
      "seam-ui-jsf-00002",
      "seam-ui-jsf-00001-01",
      "seam-ui-jsf-01000",
      "seam-ui-jsf-01001",
      "seam-ui-jsf-01002",
      "seam-ui-jsf-01003",
      "seam-ui-jsf-01004",
      "seam-ui-jsf-01005",
      "seam-ui-jsf-01006",
      "seam-ui-jsf-01007",
      "seam-ui-jsf-01008",
      "seam-ui-jsf-01009",
      "seam-ui-jsf-01010",
      "seam-ui-jsf-01011",
      "seam-ui-jsf-01012",
      "seam-ui-jsf-01013",
      "seam-ui-jsf-01014",
      "seam-ui-jsf-01015",
      "seam-ui-jsf-01016",
      "seam-ui-jsf-01017",
      "seam-ui-jsf-01018",
      "seam-ui-jsf-01019",
      "seam-ui-jsf-01020",
      "seam-ui-jsf-01021",
      "seam-ui-jsf-01022",
      "seam-ui-jsf-01023",
      "seam-ui-jsf-01024",
      "seam-ui-jsf-01025",
      "seam-ui-jsf-01026",
      "seam-ui-jsf-01027",
      "seam-ui-jsf-01028",
      "seam-ui-jsf-01029",
      "xml-webservices-01000",
      "xml-webservices-02000",
      "xml-webservices-03000",
      "xml-webservices-04000",
      "xml-webservices-05000",
      "xml-webservices-06000",
      "xml-webservices-06001",
      "xml-webservices-07000",
      "xml-webservices-08000",
      "xml-webservices-09000",
      "xml-webservices-10000",
      "eap4-eap6-25000",
      "eap4-eap6-26000",
      "eap4-eap6-27000",
      "eap4-eap6-28000",
      "eap4-eap6-29000",
      "eap4-eap6-30000",
      "eap4-eap6-31000",
      "eap4-eap6-32000",
      "eap4-eap6-33000",
      "eap4-eap6-34000",
      "eap4-eap6-35000",
      "eap4-eap6-36000",
      "eap4-eap6-37000",
      "eap4-eap6-38000",
      "eap4-eap6-39000",
      "eap4-eap6-40000",
      "eap4-eap6-41000",
      "eap4-eap6-42000",
      "jboss-eap5-java-01000",
      "jboss-eap5-java-02000",
      "jboss-eap5-java-04000",
      "jboss-eap5-java-05000",
      "jboss-eap5-java-06000",
      "jboss-eap5-java-07000",
      "jboss-eap5-java-08000",
      "jboss-eap5-java-08100",
      "jboss-eap5-java-08200",
      "jboss-eap5-java-08300",
      "jboss-eap5-java-08400",
      "jboss-eap5-java-08500",
      "jboss-eap5-java-08600",
      "jboss-eap5-java-08700",
      "jboss-eap5-java-08800",
      "jboss-eap5-java-08900",
      "jboss-eap5-java-09000",
      "jboss-eap5-java-09100",
      "jboss-eap5-xml-01000",
      "jboss-eap5-xml-03000",
      "jboss-eap5-xml-05000",
      "jboss-eap5-xml-06000",
      "jboss-eap5-xml-07000",
      "jboss-eap5-xml-02000",
      "jboss-eap5-xml-08000",
      "jboss-eap5-xml-09000",
      "jboss-eap5-7-xml-10000",
      "jboss-eap5-xml-11000",
      "jboss-eap5-xml-12000",
      "jboss-eap5-xml-13000",
      "jboss-eap5-xml-16000",
      "jboss-eap5-xml-17000",
      "jboss-eap5-xml-18000",
      "jboss-eap5-xml-20000",
      "jboss-eap5-xml-14000",
      "resteasy-eap5-000001",
      "xml-jonas-01000",
      "jotm-00001",
      "jrun-catchall-00000",
      "jrun-catchall-00001",
      "xml-jrun-01000",
      "xml-jrun-02000",
      "jsp-01000",
      "log4j-02000",
      "log4j-01000",
      "log4j-03000",
      "xml-orion-01000",
      "xml-orion-02000",
      "xml-orion-03000",
      "xml-resin-01000",
      "environment-dependent-calls-03500",
      "environment-dependent-calls-01000",
      "environment-dependent-calls-02000",
      "environment-dependent-calls-03000",
      "environment-dependent-calls-04000",
      "environment-dependent-calls-04001",
      "environment-dependent-calls-05000",
      "generic-catchall-00000",
      "generic-catchall-00001",
      "generic-catchall-00002",
      "generic-catchall-00003",
      "generic-catchall-00100",
      "generic-catchall-00200",
      "generic-catchall-00300",
      "generic-catchall-00400",
      "generic-catchall-00500",
      "generic-catchall-00600",
      "generic-catchall-00700",
      "generic-catchall-00900"
    ]
  },
  {
    "name": "eap7/weblogic/tests/data",
    "skipped": [
      "websphere-jms-eap7-00000",
      "websphere-jms-eap7-01000",
      "websphere-jms-eap7-02000",
      "websphere-jms-eap7-02500",
      "websphere-jms-eap7-03000",
      "websphere-jms-eap7-04000",
      "websphere-mq-eap7-00000",
      "websphere-mq-eap7-01000",
      "websphere-mq-eap7-02000",
      "websphere-mqe-eap7-00000",
      "websphere-mqe-eap7-01000",
      "websphere-mqe-eap7-02000",
      "websphere-mqe-eap7-03000",
      "websphere-mqe-eap7-04000",
      "websphere-other-eap7-01000",
      "websphere-other-eap7-02000",
      "eap7-websphere-xml-01000",
      "eap7-websphere-xml-02000",
      "eap7-websphere-xml-07000",
      "eap7-websphere-xml-08000",
      "eap7-websphere-xml-09000",
      "eap7-websphere-xml-03500",
      "eap7-websphere-xml-06000",
      "deprecated-singletonpolicy-00001",
      "maven-artemis-jms-client-00001",
      "maven-javax-to-jakarta-00001",
      "maven-javax-to-jakarta-00002",
      "maven-javax-to-jakarta-00003",
      "maven-javax-to-jakarta-00004",
      "maven-javax-to-jakarta-00005",
      "maven-javax-to-jakarta-00006",
      "maven-javax-to-jakarta-00007",
      "maven-javax-to-jakarta-00008",
      "maven-javax-to-jakarta-00010",
      "maven-javax-to-jakarta-00011",
      "maven-javax-to-jakarta-00012",
      "maven-javax-to-jakarta-00013",
      "maven-javax-to-jakarta-00014",
      "maven-javax-to-jakarta-00015",
      "maven-javax-to-jakarta-00016",
      "maven-javax-to-jakarta-00017",
      "maven-jboss-rmi-api_1.0_spec-00001",
      "move-to-microprofile-rest-client-1.3-00001",
      "singleton-sessionbean-00001",
      "microprofile_removed_from_eap-00001",
      "microprofile_removed_from_eap-00002",
      "microprofile_removed_from_eap-00003",
      "microprofile_removed_from_eap-00004",
      "microprofile_removed_from_eap-00001-01",
      "elytron-eap71-00000",
      "elytron-eap71-00010",
      "weblogic-catchall-01000",
      "weblogic-catchall-02000",
      "weblogic-catchall-03000",
      "weblogic-catchall-06000",
      "weblogic-catchall-06500",
      "weblogic-ejb-01000",
      "weblogic-ejb-02000",
      "weblogic-ejb-03000",
      "weblogic-ejb-04000",
      "websphere-catchall-db2-00000",
      "websphere-catchall-00000",
      "websphere-catchall-00001",
      "jboss-eap4and5to6and7-java-01000",
      "jboss-eap4and5to6and7-java-02000",
      "jboss-eap4and5to6and7-java-03000",
      "jboss-eap4and5to6and7-xml-01000",
      "jboss-eap4and5to6and7-xml-02000",
      "jboss-eap4and5to6and7-xml-03000",
      "jboss-eap4and5to6and7-xml-04000",
      "jboss-eap4and5to6and7-xml-05000",
      "jboss-eap4and5to6and7-xml-06000",
      "jboss-eap4and5to6and7-xml-07000",
      "base64-01000",
      "jaxrpc-00000",
      "jboss-eap5-7-java-02000",
      "jboss-eap5-7-java-03000",
      "jboss-eap5-7-java-05000",
      "jboss-eap5-7-java-06000",
      "jboss-eap5-7-java-07000",
      "jboss-eap5-7-java-08000",
      "jboss-eap5-7-java-08100",
      "jboss-eap5-7-java-08200",
      "jboss-eap5-7-java-08300",
      "jboss-eap5-7-java-08400",
      "jboss-eap5-7-java-08500",
      "jboss-eap5-7-java-08600",
      "jboss-eap5-7-java-08700",
      "jboss-eap5-7-java-08800",
      "jboss-eap5-7-java-08900",
      "jboss-eap5-7-java-09000",
      "jboss-eap5-7-java-09100",
      "jboss-eap5-7-xml-01000",
      "jboss-eap5-7-xml-02000",
      "jboss-eap5-7-xml-10000",
      "jboss-eap5-7-xml-13000",
      "jboss-eap5-7-xml-16000",
      "jboss-eap5-7-xml-14000",
      "jboss-eap5and6to7-java-01000",
      "jboss-eap5and6to7-java-02000",
      "jboss-eap5and6to7-java-04000",
      "jboss-eap5and6to7-java-08000",
      "jboss-eap5and6to7-java-03000",
      "jboss-eap5and6to7-java-05000",
      "jboss-eap5and6to7-java-06000",
      "jboss-eap5and6to7-java-07000",
      "jboss-eap5and6to7-java-09000",
      "jboss-eap5and6to7-xml-05000",
      "jboss-eap5and6to7-xml-06000",
      "jboss-eap5and6to7-xml-07000",
      "jboss-eap5and6to7-xml-09000",
      "jboss-eap5and6to7-xml-12000",
      "jboss-eap5and6to7-xml-17000",
      "jboss-eap5and6to7-xml-18000",
      "jboss-eap5and6to7-xml-34000",
      "jboss-eap5and6to7-xml-37000",
      "jboss-eap5and6to7-xml-31000",
      "jboss-eap5and6to7-xml-31500",
      "jboss-eap5and6to7-xml-32000",
      "jboss-eap5and6to7-xml-33000",
      "jboss-eap5and6to7-xml-38000",
      "jboss-eap5and6to7-xml-38001",
      "jboss-eap5and6to7-xml-38002",
      "jboss-eap5and6to7-xml-38003",
      "jboss-eap5and6to7-xml-38004",
      "jboss-eap5and6to7-xml-38005",
      "jboss-eap5and6to7-xml-38006",
      "jboss-eap5and6to7-xml-38007",
      "jboss-eap5and6to7-xml-39000",
      "jboss-eap5and6to7-xml-40000",
      "resteasy-eap5and6to7-000018",
      "eap6-xml-05000",
      "eap6-xml-06000",
      "eap6-08000",
      "eap6-08001",
      "eap6-08002",
      "eap6-11000",
      "eap6-12000",
      "hibernate4-xml-00001",
      "hibernate4-xml-00002",
      "hibernate4-xml-00003",
      "hibernate4-xml-00004",
      "hibernate4-xml-00005",
      "hibernate4-00001",
      "hibernate4-00002",
      "hibernate4-00003",
      "hibernate4-00004",
      "hibernate4-00005",
      "hibernate4-00006",
      "hibernate4-00007",
      "hibernate4-00008",
      "hibernate4-00009",
      "hibernate4-00010",
      "hibernate4-00011",
      "hibernate4-00012",
      "hibernate4-00013",
      "hibernate4-00014",
      "hibernate4-00015",
      "hibernate4-00016",
      "hibernate4-00017",
      "hibernate4-00018",
      "hibernate4-00021",
      "hibernate4-00022",
      "hibernate4-00023",
      "hibernate4-00024",
      "hibernate4-00025",
      "hibernate4-00026",
      "hibernate4-00027",
      "hibernate4-00028",
      "hibernate4-00030",
      "hibernate4-00031",
      "hibernate4-00032",
      "hibernate4-00033",
      "hibernate4-00034",
      "hibernate4-00035",
      "hibernate4-00036",
      "hibernate4-00037",
      "hibernate4-00038",
      "hibernate4-00039",
      "hibernate4-00040",
      "hsearch-00000",
      "hsearch-00001",
      "hsearch-00002",
      "hsearch-00003",
      "hsearch-00004",
      "hsearch-00005",
      "hsearch-00006",
      "hsearch-00007",
      "hsearch-00008",
      "hsearch-00009",
      "hsearch-00010",
      "hsearch-00011",
      "hsearch-00100",
      "hsearch-00101",
      "hsearch-00103",
      "hsearch-00104",
      "hsearch-00106",
      "hsearch-00107",
      "hsearch-00108",
      "hsearch-00109",
      "hsearch-00110",
      "hsearch-00111",
      "hsearch-00112",
      "hsearch-00113",
      "hsearch-00114",
      "hsearch-00115",
      "hsearch-00116",
      "hsearch-00117",
      "hsearch-00118",
      "hsearch-00119",
      "hsearch-00200",
      "hsearch-00201",
      "hsearch-00210",
      "hsearch-00211",
      "hsearch-00213",
      "hsearch-00214",
      "hsearch-00215",
      "hsearch-00216",
      "hsearch-00217",
      "hsearch-00218",
      "hsearch-00219",
      "hsearch-00220",
      "hsearch-00221",
      "hsearch-00222",
      "hsearch-00224",
      "hsearch-00225",
      "hsearch-00226",
      "hsearch-00227",
      "hsearch-00228",
      "hsearch-00229",
      "hsearch-00230",
      "hsearch-00231",
      "hsearch-00232",
      "hsearch-00233",
      "hsearch-00234",
      "hsearch-00235",
      "hsearch-00236",
      "hsearch-00237",
      "hsearch-00238",
      "hsearch-00239",
      "hsearch-00240",
      "jax-ws-00000",
      "resteasy-eap6-000001",
      "resteasy-eap6-000002",
      "resteasy-eap6-000003",
      "resteasy-eap6-000004",
      "resteasy-eap6-000005",
      "resteasy-eap6-000006",
      "resteasy-eap6-000007",
      "resteasy-eap6-000008",
      "resteasy-eap6-000009",
      "resteasy-eap6-000010",
      "resteasy-eap6-000011",
      "resteasy-eap6-000012",
      "resteasy-eap6-000013",
      "resteasy-eap6-000014",
      "resteasy-eap6-000015",
      "resteasy-eap6-000017",
      "resteasy-eap6-000019",
      "resteasy-eap6-000020",
      "resteasy-eap6-000021",
      "resteasy-eap6-000022",
      "resteasy-eap6-000023",
      "resteasy-eap6-000024",
      "resteasy-eap6-000025",
      "resteasy-eap6-000029",
      "resteasy-eap6-000030",
      "resteasy-eap6-000032",
      "resteasy-eap6-000101",
      "resteasy-eap6-000103",
      "resteasy-eap6-000104",
      "resteasy-eap6-000105",
      "resteasy-eap6-000106",
      "resteasy-eap6-000107",
      "resteasy-eap6-000118",
      "resteasy-eap6-000119",
      "resteasy-eap6-000120",
      "resteasy-eap6-000121",
      "resteasy-eap6-000122",
      "resteasy-eap6-000123",
      "resteasy-eap6-000125",
      "resteasy-eap6-000126",
      "resteasy-eap6-000127",
      "resteasy-eap6-000128",
      "resteasy-eap6-000129",
      "resteasy-eap6-000130",
      "resteasy-eap6-000131",
      "resteasy-eap6-000140",
      "resteasy-eap6-000141",
      "resteasy-eap6-000142",
      "ws-security-00000",
      "ws-security-00001",
      "ws-security-00002",
      "hibernate50-51-00000",
      "hibernate50-51-00100",
      "hibernate51-53-00001",
      "hibernate51-53-00100",
      "hibernate51-53-00300",
      "hibernate51-53-00400",
      "hibernate51-53-00401",
      "hibernate51-53-00402",
      "hibernate51-53-00403",
      "hibernate51-53-00404",
      "hibernate51-53-00405",
      "hibernate51-53-00406",
      "hibernate51-53-00407",
      "hibernate51-53-00500",
      "hibernate51-53-00600",
      "hibernate51-53-00700",
      "hibernate51-53-00701",
      "hibernate51-53-00702",
      "hibernate51-53-00800",
      "hibernate51-53-01000",
      "hibernate51-53-01001",
      "hibernate51-53-01100",
      "hibernate51-53-01200",
      "picketlink25-00000",
      "resteasy30-36-00001",
      "embedded-framework-libraries-01000",
      "embedded-framework-libraries-02000",
      "embedded-framework-libraries-04000",
      "embedded-framework-libraries-05000",
      "embedded-framework-libraries-06000",
      "weblogic-jms-eap7-00000",
      "weblogic-jms-eap7-01000",
      "weblogic-jms-eap7-02000",
      "weblogic-jms-eap7-03000",
      "weblogic-jms-eap7-04000",
      "weblogic-jms-eap7-05000",
      "weblogic-jms-eap7-06000",
      "weblogic-jms-eap7-07000",
      "weblogic-jms-eap7-08000",
      "weblogic-services-eap7-01000",
      "weblogic-services-eap7-02000",
      "weblogic-services-eap7-03000",
      "weblogic-webapp-eap7-01000",
      "weblogic-webapp-eap7-02000",
      "weblogic-webapp-eap7-03000",
      "weblogic-webapp-eap7-04000",
      "weblogic-webapp-eap7-05000",
      "weblogic-webapp-eap7-06000",
      "weblogic-webapp-eap7-07000",
      "weblogic-webapp-eap7-08000",
      "weblogic-webapp-eap7-09000",
      "weblogic-webservices-eap7-01000",
      "weblogic-webservices-eap7-02000",
      "weblogic-webservices-eap7-03000",
      "weblogic-webservices-eap7-04000",
      "weblogic-webservices-eap7-05000",
      "weblogic-webservices-eap7-06000",
      "weblogic-webservices-07000",
      "weblogic-xml-descriptor-eap7-01000",
      "weblogic-xml-descriptor-eap7-02000",
      "weblogic-xml-descriptor-eap7-07000",
      "weblogic-xml-descriptor-eap7-08000",
      "weblogic-xml-descriptor-eap7-09000",
      "weblogic-xml-descriptor-eap7-11000",
      "weblogic-xml-descriptor-eap7-12000",
      "weblogic-xml-descriptor-eap7-13000",
      "weblogic-xml-descriptor-eap7-14000",
      "weblogic-xml-descriptor-eap7-15000",
      "weblogic-xml-descriptor-eap7-16000",
      "weblogic-xml-descriptor-eap7-17000",
      "weblogic-xml-descriptor-eap7-18000",
      "weblogic-xml-descriptor-eap7-03000",
      "weblogic-xml-descriptor-eap7-04000",
      "weblogic-xml-descriptor-eap7-06001",
      "weblogic-xml-descriptor-eap7-10000",
      "weblogic-xml-descriptor-19000",
      "weblogic-eap7-01000",
      "weblogic-eap7-02000",
      "weblogic-eap7-03000",
      "weblogic-eap7-04000",
      "weblogic-eap7-05000",
      "weblogic-eap7-06000",
      "weblogic-eap7-07000",
      "weblogic-eap7-08000",
      "weblogic-eap7-09000",
      "weblogic-eap7-10000",
      "weblogic-eap7-11000",
      "weblogic-eap7-12000",
      "weblogic-eap7-13000",
      "weblogic-eap7-15000",
      "weblogic-eap7-016000",
      "weblogic-eap7-017000"
    ]
  },
  {
    "name": "eap8/eap7",
    "description": "This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.",
    "skipped": [
      "eap8-faces-00001",
      "eap8-faces-00002",
      "eap8-faces-00003",
      "eap8-faces-00004",
      "eap8-faces-00005",
      "eap8-faces-00006",
      "eap8-faces-00007",
      "eap8-faces-00008",
      "eap8-faces-00009",
      "eap8-resteasy-00001",
      "eap8-resteasy-00002",
      "eap8-resteasy-00003",
      "eap8-resteasy-00004",
      "eap8-resteasy-00005",
      "eap8-resteasy-00006",
      "eap8-resteasy-00007",
      "eap8-resteasy-00008",
      "eap8-resteasy-00009",
      "eap8-resteasy-00010",
      "eap8-resteasy-00011",
      "eap8-xml-binding-00001",
      "eap8-xml-binding-00002",
      "eap8-xml-binding-00003",
      "eap8-xml-binding-00004",
      "eap8-xml-binding-00005",
      "eap8-xml-binding-00006",
      "eap8-xml-binding-00007",
      "eap8-xml-binding-00008",
      "eap8-xml-binding-00009",
      "eap8-ejb-00001",
      "eap8-ejb-00002",
      "eap8-ejb-00003",
      "empty-beans-xml-00001",
      "hibernate-6.2-00010",
      "hibernate-6.2-00020",
      "hibernate-6.2-00030",
      "hibernate-6.2-00040",
      "hibernate-6.2-00050",
      "hibernate-search-6.1-00010",
      "hibernate-search-6.1-00020",
      "hibernate-search-6.1-00030",
      "hibernate-search-6.1-00040",
      "hibernate-search-6.1-00050",
      "hibernate-search-6.1-00060",
      "hibernate-search-6.1-00070",
      "hibernate-search-6.1-00080",
      "hibernate-search-6.1-00090",
      "hibernate-search-6.1-00100",
      "hibernate-search-6.1-00120",
      "hibernate-search-6.1-00130",
      "hibernate-search-6.1-00140",
      "hibernate-search-6.1-00150",
      "hibernate-search-6.1-00160",
      "hibernate-search-6.1-00170",
      "hibernate-search-6.1-00180",
      "hibernate-search-6.1-00190",
      "hibernate-search-00010",
      "hibernate-search-00020",
      "hibernate-search-00030",
      "hibernate-search-00040",
      "hibernate-search-00050",
      "hibernate-search-00060",
      "hibernate-search-00070",
      "hibernate-search-00080",
      "hibernate-search-00090",
      "hibernate-search-00100",
      "hibernate-search-00105",
      "hibernate-search-00110",
      "hibernate-search-00120",
      "hibernate-search-00140",
      "hibernate-search-00150",
      "hibernate-search-00160",
      "hibernate-search-00170",
      "hibernate-search-00180",
      "hibernate-search-00190",
      "hibernate-search-00200",
      "hibernate-search-00210",
      "hibernate-search-00220",
      "hibernate-search-00230",
      "hibernate-search-00240",
      "hibernate-search-00250",
      "hibernate-search-00260",
      "hibernate-search-00270",
      "hibernate-search-00280",
      "hibernate-search-00290",
      "hibernate-search-00300",
      "hibernate-search-00310",
      "hibernate-search-00320",
      "hibernate-search-00330",
      "hibernate-search-00340",
      "hibernate-search-00350",
      "hibernate-search-00360",
      "hibernate-search-00370",
      "hibernate-search-00380",
      "hibernate-search-00390",
      "hibernate-search-00400",
      "hibernate-search-00410",
      "hibernate-search-00420",
      "hibernate-search-00430",
      "hibernate-search-00440",
      "hibernate-search-00450",
      "hibernate-search-00460",
      "hibernate-search-00470",
      "hibernate-search-00480",
      "hibernate-search-00490",
      "hibernate-search-00500",
      "hibernate-search-00510",
      "hibernate-search-00520",
      "hibernate-search-00530",
      "hibernate-search-00540",
      "hibernate-search-00550",
      "hibernate-search-00560",
      "hibernate-search-00570",
      "hibernate-search-00580",
      "hibernate-search-00590",
      "hibernate-search-00600",
      "hibernate-search-00610",
      "hibernate-search-00620",
      "hibernate-search-00630",
      "hibernate-search-00640",
      "hibernate-search-00650",
      "hibernate-search-00660",
      "hibernate-search-00670",
      "hibernate-search-00680",
      "hibernate-search-00690",
      "hibernate-search-00700",
      "hibernate-search-00710",
      "hibernate-search-00720",
      "hibernate-search-00730",
      "hibernate-search-00740",
      "hibernate-search-00750",
      "hibernate-search-00760",
      "hibernate-search-00770",
      "hibernate-search-00780",
      "hibernate-search-00790",
      "hibernate-search-00800",
      "hibernate-search-00810",
      "hibernate-search-00820",
      "hibernate-search-00830",
      "hibernate-search-00840",
      "hibernate-search-00850",
      "hibernate-search-00860",
      "hibernate-search-00870",
      "hibernate-search-00880",
      "hibernate-search-00890",
      "hibernate-search-00900",
      "hibernate-search-00910",
      "hibernate-search-00920",
      "hibernate-search-00930",
      "hibernate-search-00940",
      "hibernate-search-00950",
      "hibernate-search-00960",
      "hibernate-search-00970",
      "hibernate-search-00980",
      "hibernate-search-00990",
      "hibernate-search-01000",
      "hibernate-search-01010",
      "hibernate-search-01020",
      "hibernate-search-01030",
      "hibernate-search-01040",
      "hibernate-00005",
      "hibernate-00010",
      "hibernate6-00020",
      "hibernate6-00030",
      "hibernate6-00040",
      "hibernate6-00050",
      "hibernate6-00060",
      "hibernate6-00070",
      "hibernate6-00080",
      "hibernate6-00090",
      "hibernate6-00100",
      "hibernate6-00110",
      "hibernate6-00120",
      "hibernate6-00130",
      "hibernate6-00140",
      "hibernate6-00150",
      "hibernate6-00160",
      "hibernate6-00170",
      "hibernate6-00180",
      "hibernate6-00190",
      "hibernate6-00200",
      "hibernate6-00210",
      "hibernate6-00220",
      "hibernate6-00230",
      "hibernate6-00240",
      "hibernate6-00250",
      "hibernate6-00251",
      "hibernate6-00252",
      "hibernate6-00253",
      "hibernate6-00254",
      "hibernate6-00255",
      "hibernate6-00257",
      "hibernate6-00270",
      "hibernate6-00280",
      "jakarta-cdi-00001",
      "jakarta-cdi-00002",
      "jakarta-cdi-00003",
      "jakarta-cdi-00004",
      "jakarta-el-00010",
      "jakarta-el-00020",
      "jakarta-faces-00001",
      "jakarta-json-binding-00010",
      "jakarta-soap-00010",
      "jakarta-soap-00020",
      "jakarta-ws-rs-00001",
      "javaee-to-jakarta-namespaces-00001",
      "javaee-to-jakarta-namespaces-00002",
      "javaee-to-jakarta-namespaces-00003",
      "javaee-to-jakarta-namespaces-00004",
      "javaee-to-jakarta-namespaces-00005",
      "javaee-to-jakarta-namespaces-00006",
      "javaee-to-jakarta-namespaces-00007",
      "javaee-to-jakarta-namespaces-00008",
      "javaee-to-jakarta-namespaces-00009",
      "javaee-to-jakarta-namespaces-00010",
      "javaee-to-jakarta-namespaces-00011",
      "javaee-to-jakarta-namespaces-00012",
      "javaee-to-jakarta-namespaces-00013",
      "javaee-to-jakarta-namespaces-00014",
      "javaee-to-jakarta-namespaces-00015",
      "javaee-to-jakarta-namespaces-00016",
      "javaee-to-jakarta-namespaces-00017",
      "javaee-to-jakarta-namespaces-00018",
      "javaee-to-jakarta-namespaces-00019",
      "javaee-to-jakarta-namespaces-00020",
      "javaee-to-jakarta-namespaces-00021",
      "javaee-to-jakarta-namespaces-00022",
      "javaee-to-jakarta-namespaces-00023",
      "javaee-to-jakarta-namespaces-00024",
      "javaee-to-jakarta-namespaces-00025",
      "javaee-to-jakarta-namespaces-00026",
      "javaee-to-jakarta-namespaces-00027",
      "javaee-to-jakarta-namespaces-00028",
      "javaee-to-jakarta-namespaces-00029",
      "javaee-to-jakarta-namespaces-00030",
      "javaee-to-jakarta-namespaces-00031",
      "javaee-to-jakarta-namespaces-00032",
      "javaee-to-jakarta-namespaces-00033",
      "javaee-to-jakarta-namespaces-00034",
      "javaee-to-jakarta-namespaces-00035",
      "javaee-to-jakarta-namespaces-00036",
      "javaee-to-jakarta-namespaces-00037",
      "javaee-to-jakarta-namespaces-00038",
      "javaee-to-jakarta-namespaces-00039",
      "javaee-to-jakarta-namespaces-00040",
      "javaee-to-jakarta-namespaces-00041",
      "javaee-to-jakarta-namespaces-00042",
      "javaee-to-jakarta-namespaces-00043",
      "javaee-to-jakarta-namespaces-00044",
      "javaee-to-jakarta-namespaces-00045",
      "javaee-to-jakarta-namespaces-00046",
      "javaee-to-jakarta-namespaces-00047",
      "javaee-to-jakarta-namespaces-00048",
      "javaee-to-jakarta-namespaces-00049",
      "javaee-to-jakarta-namespaces-00050",
      "javaee-to-jakarta-namespaces-00051",
      "javaee-to-jakarta-namespaces-00052",
      "javaee-to-jakarta-namespaces-00053",
      "javaee-to-jakarta-namespaces-00054",
      "javaee-to-jakarta-namespaces-00055",
      "javaee-to-jakarta-namespaces-00056",
      "javax-to-jakarta-bootstrapping-files-00001",
      "javax-to-jakarta-dependencies-00001",
      "javax-to-jakarta-dependencies-00002",
      "javax-to-jakarta-dependencies-00003",
      "javax-to-jakarta-dependencies-00004",
      "javax-to-jakarta-dependencies-00005",
      "javax-to-jakarta-dependencies-00006",
      "javax-to-jakarta-dependencies-00007",
      "javax-to-jakarta-dependencies-00008",
      "javax-to-jakarta-import-00001",
      "javax-to-jakarta-properties-00001",
      "javax-to-jakarta-servlet-00010",
      "javax-to-jakarta-servlet-00020",
      "javax-to-jakarta-servlet-00030",
      "javax-to-jakarta-servlet-00040",
      "javax-to-jakarta-servlet-00041",
      "javax-to-jakarta-servlet-00042",
      "javax-to-jakarta-servlet-00043",
      "javax-to-jakarta-servlet-00050",
      "javax-to-jakarta-servlet-00060",
      "javax-to-jakarta-servlet-00070",
      "javax-to-jakarta-servlet-00071",
      "javax-to-jakarta-servlet-00072",
      "javax-to-jakarta-servlet-00080",
      "javax-to-jakarta-servlet-00090",
      "javax-to-jakarta-servlet-00100",
      "javax-to-jakarta-servlet-00101",
      "javax-to-jakarta-servlet-00102",
      "javax-to-jakarta-servlet-00110",
      "javax-to-jakarta-servlet-00111",
      "javax-to-jakarta-servlet-00112",
      "javax-to-jakarta-servlet-00120",
      "javax-to-jakarta-servlet-00121",
      "javax-to-jakarta-servlet-00122",
      "javax-to-jakarta-servlet-00123",
      "javax-to-jakarta-servlet-00130",
      "jboss-dependencies-00001",
      "jboss-dependencies-00002",
      "jboss-dependencies-00003",
      "jboss-dependencies-00004",
      "jboss-dependencies-00005",
      "jboss-dependencies-00006",
      "jboss-dependencies-00007",
      "jboss-dependencies-00008",
      "jboss-dependencies-00009",
      "jboss-dependencies-00010",
      "jboss-dependencies-00011",
      "jboss-dependencies-00012",
      "jboss-dependencies-00013",
      "jboss-dependencies-00014",
      "jboss-dependencies-00015",
      "jboss-dependencies-00016",
      "jboss-dependencies-00017",
      "jboss-dependencies-00018",
      "jboss-dependencies-00019",
      "jboss-dependencies-00020",
      "jboss-dependencies-00021",
      "jboss-dependencies-00022",
      "jboss-dependencies-00023",
      "jboss-dependencies-00024",
      "jboss-dependencies-00025",
      "jboss-dependencies-00026",
      "jboss-dependencies-00027",
      "jboss-dependencies-00028",
      "jboss-dependencies-00030",
      "jboss-dependencies-00031",
      "jboss-dependencies-00032",
      "keycloak-openid-00001",
      "keycloak-openid-00010",
      "legacy-vault-00010",
      "login-modules-00001",
      "picketlink-00010",
      "picketlink-00020",
      "deprecated-initialcontextfactory-is-removed-00001",
      "log4j-removed-00001",
      "log4j-removed-00002",
      "log4j-removed-00003",
      "log4j-removed-00004",
      "log4j-removed-00005"
    ]
  },
  {
    "name": "eapxp/thorntail",
    "description": "This ruleset provides analysis of Maven built applications that use Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR Maven Plugin, when migrating to JBoss EAP XP.",
    "skipped": [
      "eapxp_bootable_jar_maven_plugin_configuration_changes-1",
      "eapxp_microprofile_metrics_not_supported-00001",
      "eapxp_microprofile_opentracing_not_supported-00001",
      "remove_thorntail_yaml_configuration_files-1",
      "replace_thorntail_boms-1",
      "replace_thorntail_boms-2",
      "replace_thorntail_fractions-01",
      "replace_thorntail_fractions-02",
      "replace_thorntail_fractions-03",
      "replace_thorntail_fractions-04",
      "replace_thorntail_fractions-05",
      "replace_thorntail_fractions-06",
      "replace_thorntail_fractions-07",
      "replace_thorntail_fractions-08",
      "replace_thorntail_fractions-09",
      "replace_thorntail_fractions-10",
      "replace_thorntail_fractions-11",
      "replace_thorntail_fractions-12",
      "replace_thorntail_fractions-13",
      "replace_thorntail_fractions-14",
      "replace_thorntail_fractions-15",
      "replace_thorntail_fractions-16",
      "replace_thorntail_fractions-17",
      "replace_thorntail_fractions-18",
      "replace_thorntail_fractions-19",
      "replace_thorntail_fractions-20",
      "replace_thorntail_fractions-21",
      "replace_thorntail_fractions-22",
      "replace_thorntail_fractions-23",
      "replace_thorntail_fractions-24",
      "replace_thorntail_fractions-25",
      "replace_thorntail_fractions-26",
      "replace_thorntail_fractions-27",
      "replace_thorntail_fractions-28",
      "replace_thorntail_fractions-29",
      "replace_thorntail_fractions-30",
      "replace_thorntail_fractions-31",
      "replace_thorntail_fractions-32",
      "replace_thorntail_fractions-33",
      "replace_thorntail_fractions-34",
      "replace_thorntail_fractions-35",
      "replace_thorntail_fractions-36",
      "replace_thorntail_fractions-37",
      "replace_thorntail_fractions-38",
      "replace_thorntail_fractions-39",
      "replace_thorntail_fractions-40",
      "replace_thorntail_fractions-41",
      "replace_thorntail_fractions-42",
      "replace_thorntail_fractions-43",
      "replace_thorntail_fractions-44",
      "replace_thorntail_fractions-45",
      "replace_thorntail_fractions-46",
      "replace_thorntail_fractions-47",
      "replace_thorntail_fractions-48",
      "replace_thorntail_fractions-49",
      "replace_thorntail_fractions-50",
      "replace_thorntail_maven_plugin-1"
    ]
  },
  {
    "name": "eapxp6/eapxp5",
    "description": "This ruleset provides analysis of Maven built applications when migrating from EAP XP 5 to 6.",
    "skipped": [
      "eapxp_microprofile_openapi_4.0-00001",
      "eapxp_microprofile_openapi_4.0-00002",
      "eapxp_microprofile_openapi_4.0-00003",
      "eapxp_microprofile_openapi_4.0-00004",
      "eapxp_microprofile_openapi_4.0-00005"
    ]
  },
  {
    "name": "filemappings",
    "description": "This rule set configures the organization matching functionality, using known root-package prefixes to identify libraries and other code."
  },
  {
    "name": "fuse-service-works/soa-p-5",
    "description": "This ruleset provides analysis of JBoss SOA Platform 5 applications and provides information on how to migrate these to Red Hat JBoss Fuse Service Works",
    "skipped": [
      "soa-p-5-01000",
      "soa-p-5-02000",
      "soa-p-5-03000",
      "soa-p-5-04000",
      "soa-p-5-05000",
      "soa-p-5-06000",
      "soa-p-5-07000",
      "soa-p-5-08000",
      "soa-p-5-09000",
      "soa-p-5-10000",
      "soa-p-5-11000",
      "soa-p-5-12000",
      "soa-p-5-13000",
      "soa-p-5-14000",
      "soa-p-5-15000",
      "soa-p-16000",
      "soa-p-17000",
      "soa-p-18000",
      "soa-p-19000",
      "soa-p-20000",
      "soa-p-21000",
      "soa-p-22000",
      "soa-p-23000",
      "soa-p-24000",
      "soa-p-25000",
      "soa-p-26000",
      "soa-p-27000",
      "soa-p-28000",
      "soa-p-29000",
      "soa-p-30000",
      "soa-p-31000",
      "soa-p-32000",
      "soa-p-33000",
      "soa-p-34000",
      "soa-p-35000",
      "soa-p-36000",
      "soa-p-37000",
      "soa-p-38000",
      "soa-p-39000",
      "soa-p-40000",
      "soa-p-41000",
      "soa-p-42000",
      "soa-p-43000",
      "soa-p-44000",
      "soa-p-45000",
      "soa-p-46000",
      "soa-p-47000",
      "soa-p-48000",
      "soa-p-49000",
      "soa-p-50000"
    ]
  },
  {
    "name": "fuse/sonicesb",
    "description": "This ruleset contains rules that assist in migrating from Sonic ESB to Apache Camel.",
    "skipped": [
      "sonic-catchall-00000",
      "sonic-esb-01000",
      "sonic-esb-02000",
      "sonic-esb-03000",
      "sonic-esb-04000",
      "sonic-esb-05000",
      "sonic-esb-06000",
      "sonic-esb-07000",
      "sonic-esb-08000",
      "sonic-esb-09000",
      "sonic-esb-10000",
      "sonic-esb-11000",
      "sonic-esb-12000",
      "sonic-esb-13000",
      "sonic-esb-14000",
      "sonic-esb-15000",
      "sonic-esb-16000",
      "sonic-esb-17000",
      "sonic-esb-18000",
      "sonic-esb-19000",
      "sonic-esb-20000",
      "sonic-esb-21000",
      "xml-sonic-esb-01000"
    ]
  },
  {
    "name": "hibernate",
    "description": "This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.",
    "skipped": [
      "hibernate-catchall-00000",
      "hibernate-xml-04000",
      "hibernate-xml-05000",
      "hibernate-xml-01000",
      "hibernate-xml-02000",
      "hibernate-xml-03000",
      "hibernate-10100",
      "hibernate-01000",
      "hibernate-02000",
      "hibernate-03000",
      "hibernate-04000",
      "hibernate-05000",
      "hibernate-06000",
      "hibernate-07000",
      "hibernate-08000",
      "hibernate-09000",
      "hibernate-10000"
    ]
  },
  {
    "name": "jakarta-ee9",
    "skipped": [
      "spring-components-00001",
      "spring-components-00002"
    ]
  },
  {
    "name": "jws5",
    "description": "This ruleset provides analysis of applications that need to change their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`",
    "skipped": [
      "upgrade-tomcat-dependencies-00001"
    ]
  },
  {
    "name": "openjdk11/openjdk8",
    "description": "This ruleset provides analysis regarding deprecated and removed APIs between OpenJDK 8 to 11.",
    "skipped": [
      "java-10-deprecate-dom-00000",
      "java-10-deprecate-javafx-00000",
      "java-10-deprecate-runtime-00000",
      "java-10-deprecate-security-00000",
      "java-10-deprecate-security-00001",
      "java-10-deprecate-security-00002",
      "java-10-deprecate-security-00003",
      "java-10-deprecate-security-00004",
      "java-11-deprecate-awt-00000",
      "java-11-deprecate-corba-00000",
      "java-11-deprecate-javaee-00000",
      "java-11-deprecate-javaee-00001",
      "java-11-deprecate-pack-00000",
      "java-11-deprecate-peer-00000",
      "java-11-deprecate-property-00000",
      "java-11-deprecate-property-00001",
      "java-11-deprecate-security-00000",
      "java-11-deprecate-security-00001",
      "java-11-deprecate-stream-00000",
      "java-11-deprecate-thread-00000",
      "java-11-deprecate-unsafe-00000",
      "java-11-deprecate-unsafe-00001",
      "java-removals-00000",
      "java-removals-00010",
      "java-9-deprecate-agent-00000",
      "java-9-deprecate-dom-00000",
      "java-9-deprecate-javafx-00000",
      "java-9-deprecate-log-00000",
      "java-9-deprecate-pack-00000",
      "java-9-deprecate-peer-00000",
      "java-9-deprecate-property-00000",
      "java-9-deprecate-property-00001",
      "java-9-deprecate-reflect-00000",
      "java-9-deprecate-reflect-00010",
      "java-9-deprecate-security-00000",
      "java-9-deprecate-security-00001",
      "java-9-deprecate-security-00002",
      "java-9-deprecate-tracing-00000",
      "java-9-deprecate-unsafe-00000",
      "java-9-deprecate-unsafe-00001",
      "java-9-deprecate-url-00000"
    ]
  },
  {
    "name": "openjdk17/openjdk11",
    "description": "This ruleset provides analysis regarding deprecated and removed APIs between OpenJDK 11 to 17.",
    "skipped": [
      "java-12-deprecate-finalize-00000",
      "java-12-deprecate-finalize-00001",
      "java-12-deprecate-security-00000",
      "java-13-deprecate-runtime-00000",
      "java-13-deprecate-security-00000",
      "java-14-deprecate-pack-00000",
      "java-14-deprecate-property-00000",
      "java-14-deprecate-property-00001",
      "java-14-deprecate-security-00000",
      "java-14-deprecate-thread-00000",
      "java-15-deprecate-property-00000",
      "java-15-deprecate-signer-00000",
      "java-15-deprecate-ssl-00000",
      "java-15-deprecate-ssl-00001",
      "java-16-deprecate-security-00000",
      "java-16-deprecate-thread-group-00000",
      "java-17-deprecate-applet-00000",
      "java-17-deprecate-security-manager-00000",
      "java-17-deprecate-security-manager-00010",
      "java-17-deprecate-security-manager-00020",
      "java-17-deprecate-security-manager-00030",
      "java-17-deprecate-security-manager-00040",
      "java-17-deprecate-security-manager-00050",
      "java-17-deprecate-security-manager-00060",
      "java-17-deprecate-security-manager-00070",
      "java-17-deprecate-socket-00000",
      "java-17-deprecate-unsafe-00000",
      "lombok-incompatibility-00001",
      "removed-packages-00000",
      "removed-packages-00010"
    ]
  },
  {
    "name": "openjdk21/openjdk17",
    "description": "This ruleset provides analysis regarding deprecated and removed APIs between OpenJDK 17 to 21.",
    "skipped": [
      "java-18-deprecate-finalize-00000",
      "java-18-deprecate-finalize-00001",
      "java-18-deprecate-property-00000",
      "java-18-deprecate-runtime-00000",
      "java-18-deprecate-security-00000",
      "java-18-deprecate-socket-00000",
      "java-18-deprecate-thread-00000",
      "java-18-deprecate-unsafe-00000",
      "java-19-deprecate-class-00010",
      "java-19-deprecate-locale-00000",
      "java-19-deprecate-param-spec-00000",
      "java-19-deprecate-param-spec-00001",
      "java-19-deprecate-thread-00000",
      "java-19-deprecate-thread-00001",
      "java-19-deprecate-thread-00002",
      "java-20-deprecate-jmx-00000",
      "java-20-deprecate-net-00000",
      "java-20-deprecate-thread-00000",
      "java-20-deprecate-thread-00001",
      "java-20-deprecate-thread-00002",
      "java-21-deprecate-dynamic-agents-00000",
      "java-21-deprecate-file-00000",
      "java-21-deprecate-file-00001",
      "java-21-deprecate-jmx-00000",
      "java-21-deprecate-jmx-00001",
      "java-21-deprecate-property-00000",
      "java-21-deprecate-property-00001",
      "java-21-deprecate-signer-00000",
      "java-21-deprecate-thread-00000",
      "utf-8-by-default-00000",
      "utf-8-by-default-00010",
      "utf-8-by-default-00020",
      "utf-8-by-default-00030"
    ]
  },
  {
    "name": "openjdk7/oraclejdk7",
    "description": "This ruleset provides analysis with respect to the migration from OracleJDK to OpenJDK.",
    "skipped": [
      "oracle2openjdk-00000",
      "oracle2openjdk-00001",
      "oracle2openjdk-00002",
      "oracle2openjdk-00003",
      "oracle2openjdk-00004",
      "oracle2openjdk-00005",
      "oracle2openjdk-00006"
    ]
  },
  {
    "name": "openjdk8/openjdk8-",
    "description": "This ruleset provides analysis with respect to API removals between OpenJDK 8 and lower than 8.",
    "skipped": [
      "java-8-deprecate-apt-00001",
      "java-8-deprecate-callback-00001",
      "java-8-deprecate-corba-00001",
      "java-8-deprecate-javafx-builder-00001",
      "java-8-deprecate-log-00001",
      "java-8-deprecate-odbc-00001",
      "java-8-deprecate-pack-00001",
      "java-8-deprecate-pack-00002",
      "java-8-deprecate-security-00001",
      "java-8-deprecate-security-00002",
      "java-8-deprecate-security-manager-00001",
      "java-8-deprecate-security-manager-00002",
      "java-8-deprecate-stream-00001",
      "java-8-deprecate-thread-00001"
    ]
  },
  {
    "name": "openliberty/websphere",
    "description": "This ruleset identifies usage of Java APIs and technologies which are not provided by Open Liberty.",
    "skipped": [
      "DetectJavaApplicationDeploymentJava",
      "DetectJavaPortlet",
      "DetectJAXRJava",
      "DetectRemoteBundleRepositoriesJava",
      "DetectRemoteServicesJava",
      "DetectWSNotificationJava",
      "DetectEJBEntityBeansXML",
      "DetectTransactionPropagationEJBRemote",
      "DetectJAXRPC",
      "ActivitySessionRule",
      "AppProfileRule",
      "AsyncBeansSchedulerRule",
      "BatchFeaturePackRule",
      "DetectPolicySetAndWsSecurity",
      "DetectWSATXML",
      "DetectWSBAJava",
      "DynamicCacheRule",
      "DynamicQueryRule",
      "I18nRule",
      "MTOMRule",
      "ServerName",
      "SOAPOverJMSRule",
      "StartupBeanRule",
      "WebSphereSdoRule",
      "WebSphereSchedulerRule",
      "WebSphereServletRule",
      "WebSphereUnavailableAPIsAppClient",
      "WebSphereUnavailableAPIsConnectorArchitecture",
      "WebSphereUnavailableAPIsEnterpriseJavaBeans",
      "WebSphereUnavailableAPIsExceptions",
      "WebSphereUnavailableAPIsExtensionRegistry",
      "WebSphereUnavailableAPIsISC",
      "WebSphereUnavailableAPIsLoggingAndRAS",
      "WebSphereUnavailableAPIsManagement",
      "WebSphereUnavailableAPIsORB",
      "WebSphereUnavailableAPIsPMI",
      "WebSphereUnavailableAPIsPortal",
      "WebSphereUnavailableAPIsResourceAdapter",
      "WebSphereUnavailableAPIsSecurity",
      "WebSphereUnavailableAPIsSIB",
      "WebSphereUnavailableAPIsSMF",
      "WebSphereUnavailableAPIsTPV",
      "WebSphereUnavailableAPIsExtHelper",
      "WebSphereUnavailableAPIsUDDI",
      "WebSphereUnavailableAPIsWLM",
      "WebSphereUnavailableAPIsWSADIE",
      "WebSphereUnavailableAPIsWSSecurityHelper",
      "WebSphereUnavailableSPIsRRD",
      "WebSphereUnavailableSSOCookieMethod",
      "WebSphereUnavailableSSOTokenMethod",
      "WOLAMissingClassesRule",
      "WOLARule",
      "WorkAreaRule",
      "WSNotificationRuleJava",
      "XMLFeaturePackRule",
      "WebSphereWebServicesRule",
      "WebSphereWebServicesGeneratedClassesRule"
    ]
  },
  {
    "name": "os/windows",
    "description": "This is a ruleset for Windows operating system specific rules while migrating to Linux operating system.",
    "skipped": [
      "os-specific-00002"
    ]
  },
  {
    "name": "quarkus/springboot",
    "description": "This ruleset gives hints to migrate from SpringBoot devtools to Quarkus",
    "skipped": [
      "springboot-actuator-to-quarkus-0100",
      "springboot-actuator-to-quarkus-0200",
      "springboot-annotations-to-quarkus-00000",
      "springboot-cache-to-quarkus-00000",
      "springboot-cloud-config-client-to-quarkus-00000",
      "springboot-jpa-to-quarkus-00000",
      "springboot-devtools-to-quarkus-0000",
      "springboot-di-to-quarkus-00000",
      "springboot-di-to-quarkus-00001",
      "springboot-di-to-quarkus-00002",
      "springboot-generic-catchall-00100",
      "springboot-integration-to-quarkus-00010",
      "springboot-integration-to-quarkus-00020",
      "springboot-jmx-to-quarkus-00000",
      "springboot-jmx-to-quarkus-00001",
      "springboot-metrics-to-quarkus-0100",
      "springboot-metrics-to-quarkus-0300",
      "springboot-parent-pom-to-quarkus-00000",
      "springboot-plugins-to-quarkus-0000",
      "springboot-properties-to-quarkus-00000",
      "springboot-properties-to-quarkus-00001",
      "springboot-properties-to-quarkus-00002",
      "springboot-properties-to-quarkus-00003",
      "springboot-properties-to-quarkus-00004",
      "springboot-properties-to-quarkus-00005",
      "springboot-properties-to-quarkus-00006",
      "springboot-scheduled-to-quarkus-00000",
      "springboot-security-to-quarkus-00000",
      "springboot-shell-to-quarkus-00000",
      "springboot-web-to-quarkus-00000",
      "springboot-web-to-quarkus-00010",
      "springboot-webmvc-to-quarkus-00000",
      "springboot-webmvc-to-quarkus-01000",
      "ee-to-quarkus-00000",
      "ee-to-quarkus-00010",
      "ee-to-quarkus-00020",
      "persistence-to-quarkus-00000",
      "persistence-to-quarkus-00011",
      "dependency-removal-for-quarkus-00000",
      "remote-ejb-to-quarkus-00000",
      "javaee-faces-to-quarkus-00000",
      "javaee-pom-to-quarkus-00000",
      "javaee-pom-to-quarkus-00010",
      "javaee-pom-to-quarkus-00020",
      "javaee-pom-to-quarkus-00030",
      "javaee-pom-to-quarkus-00040",
      "javaee-pom-to-quarkus-00050",
      "javaee-pom-to-quarkus-00060",
      "javaee-pom-to-quarkus-00070",
      "javaee-pom-to-quarkus-00080",
      "jaxrs-to-quarkus-00000",
      "jaxrs-to-quarkus-00010",
      "jaxrs-to-quarkus-00020",
      "cdi-to-quarkus-00000",
      "cdi-to-quarkus-00020",
      "cdi-to-quarkus-00030",
      "cdi-to-quarkus-00040",
      "jakarta-cdi-to-quarkus-00000",
      "jakarta-cdi-to-quarkus-00020",
      "jakarta-cdi-to-quarkus-00030",
      "jakarta-cdi-to-quarkus-00040",
      "jakarta-cdi-to-quarkus-00050",
      "jakarta-faces-to-quarkus-00000",
      "jakarta-faces-to-quarkus-00010",
      "jakarta-jaxrs-to-quarkus-00010",
      "jakarta-jaxrs-to-quarkus-00020",
      "jms-to-reactive-quarkus-00000",
      "jms-to-reactive-quarkus-00010",
      "jms-to-reactive-quarkus-00020",
      "jms-to-reactive-quarkus-00030",
      "jms-to-reactive-quarkus-00040",
      "jms-to-reactive-quarkus-00050"
    ]
  },
  {
    "name": "rhr/springboot",
    "description": "Verify the version of the Spring Boot framework is compatible with those supported by Red Hat Runtimes",
    "skipped": [
      "springboot-associated-00001",
      "springboot-associated-00002",
      "springboot-associated-00003",
      "springboot-associated-00004",
      "springboot-associated-00005",
      "springboot-associated-00006",
      "springboot-associated-00007",
      "springboot-associated-00008",
      "springboot-associated-00009",
      "springboot-associated-00010",
      "springboot-associated-00011",
      "springboot-associated-00012",
      "springboot-associated-00013",
      "springboot-associated-00014",
      "springboot-associated-00015",
      "springboot-rhr-00001",
      "springboot-rhr-00002"
    ]
  },
  {
    "name": "spring-boot",
    "description": "Ruleset for migration of Spring Boot",
    "skipped": [
      "spring-boot-2.x-to-3.0-batch-00000",
      "spring-boot-2.x-to-3.0-batch-00010",
      "spring-boot-2.x-to-3.0-batch-00020",
      "spring-boot-2.x-to-3.0-core-changes-00001",
      "spring-boot-2.x-to-3.0-core-changes-00010",
      "spring-boot-2.x-to-3.0-core-changes-00020",
      "spring-boot-2.x-to-3.0-core-changes-00030",
      "spring-boot-2.x-to-3.0-datasource-00000",
      "spring-boot-2.x-to-3.0-datasource-00010",
      "spring-boot-2.x-to-3.0-datasource-00020",
      "spring-boot-2.x-to-3.0-datasource-00030",
      "spring-boot-2.x-to-3.0-datasource-00040",
      "spring-boot-2.x-to-3.0-datasource-00050",
      "spring-boot-2.x-to-3.0-datasource-00060",
      "spring-boot-2.x-to-3.0-dependencies-00001",
      "spring-boot-2.x-to-3.0-dependencies-00002",
      "spring-boot-2.x-to-3.0-dependencies-00003",
      "spring-boot-2.x-to-3.0-dependencies-00004",
      "spring-boot-2.x-to-3.0-dependencies-00005",
      "spring-boot-2.x-to-3.0-dependencies-00006",
      "spring-boot-2.x-to-3.0-dependencies-00007",
      "spring-boot-2.x-to-3.0-dependencies-00008",
      "spring-boot-2.x-to-3.0-dependencies-00009",
      "spring-boot-2.x-to-3.0-dependencies-00010",
      "spring-boot-2.x-to-3.0-dependencies-00011",
      "spring-boot-2.x-to-3.0-dependencies-00012",
      "spring-boot-2.x-to-3.0-dependencies-00013",
      "spring-boot-2.x-to-3.0-dependencies-00014",
      "spring-boot-2.x-to-3.0-dependencies-00015",
      "spring-boot-2.x-to-3.0-dependencies-00016",
      "spring-boot-2.x-to-3.0-removals-00010",
      "spring-boot-2.x-to-3.0-removals-00020",
      "spring-boot-2.x-to-3.0-removals-00030",
      "spring-boot-2.x-to-3.0-removals-00040",
      "spring-boot-2.x-to-3.0-removals-00050",
      "spring-boot-2.x-to-3.0-removals-00060",
      "spring-boot-2.x-to-3.0-removals-00070",
      "spring-boot-2.x-to-3.0-removals-00080",
      "spring-boot-2.x-to-3.0-removals-00090",
      "spring-boot-2.x-to-3.0-removals-00100",
      "spring-boot-2.x-to-3.0-removals-00110",
      "spring-boot-2.x-to-3.0-removals-00120",
      "spring-boot-2.x-to-3.0-removals-00130",
      "spring-boot-2.x-to-3.0-removals-00140",
      "spring-boot-2.x-to-3.0-removals-00150",
      "spring-boot-2.x-to-3.0-removals-00160",
      "spring-boot-2.x-to-3.0-removals-00170",
      "spring-boot-2.x-to-3.0-removals-00180",
      "spring-boot-2.x-to-3.0-removals-00190",
      "spring-boot-2.x-to-3.0-removals-00200",
      "spring-boot-2.x-to-3.0-removals-00210",
      "spring-boot-2.x-to-3.0-removals-00220",
      "spring-boot-2.x-to-3.0-removals-00230",
      "spring-boot-2.x-to-3.0-removals-00250",
      "spring-boot-2.x-to-3.0-removals-00260",
      "spring-boot-2.x-to-3.0-removals-00270",
      "spring-boot-2.x-to-3.0-removals-00290",
      "spring-boot-2.x-to-3.0-removals-00300",
      "spring-boot-2.x-to-3.0-removals-00310",
      "spring-boot-2.x-to-3.0-removals-00320",
      "spring-boot-2.x-to-3.0-removals-00330",
      "spring-boot-2.x-to-3.0-removals-00340",
      "spring-boot-2.x-to-3.0-removals-00350",
      "spring-boot-2.x-to-3.0-removals-00360",
      "spring-boot-2.x-to-3.0-removals-00370",
      "spring-boot-2.x-to-3.0-removals-00380",
      "spring-boot-2.x-to-3.0-removals-00390",
      "spring-boot-2.x-to-3.0-removals-00400",
      "spring-boot-2.x-to-3.0-removals-00410",
      "spring-boot-2.x-to-3.0-removals-00420",
      "spring-boot-2.x-to-3.0-removals-00430",
      "spring-boot-2.x-to-3.0-removals-00440",
      "spring-boot-2.x-to-3.0-removals-00450",
      "spring-boot-2.x-to-3.0-removals-00460",
      "spring-boot-2.x-to-3.0-removals-00470",
      "spring-boot-2.x-to-3.0-removals-00480",
      "spring-boot-2.x-to-3.0-removals-00490",
      "spring-boot-2.x-to-3.0-removals-00500",
      "spring-boot-2.x-to-3.0-removals-00510",
      "spring-boot-2.x-to-3.0-removals-00520",
      "spring-boot-2.x-to-3.0-removals-00530",
      "spring-boot-2.x-to-3.0-removals-00540",
      "spring-boot-2.x-to-3.0-removals-00550",
      "spring-boot-2.x-to-3.0-removals-00560",
      "spring-boot-2.x-to-3.0-removals-00570",
      "spring-boot-2.x-to-3.0-removals-00580",
      "spring-boot-2.x-to-3.0-removals-00590",
      "spring-boot-2.x-to-3.0-removals-00600",
      "spring-boot-2.x-to-3.0-removals-00610",
      "spring-boot-2.x-to-3.0-removals-00620",
      "spring-boot-2.x-to-3.0-removals-00630",
      "spring-boot-2.x-to-3.0-removals-00640",
      "spring-boot-2.x-to-3.0-removals-00650",
      "spring-boot-2.x-to-3.0-removals-00660",
      "spring-boot-2.x-to-3.0-removals-00670",
      "spring-boot-2.x-to-3.0-removals-00680",
      "spring-boot-2.x-to-3.0-removals-00690",
      "spring-boot-2.x-to-3.0-removals-00700",
      "spring-boot-2.x-to-3.0-removals-00710",
      "spring-boot-2.x-to-3.0-removals-00720",
      "spring-boot-2.x-to-3.0-removals-00730",
      "spring-boot-2.x-to-3.0-removals-00740",
      "spring-boot-2.x-to-3.0-removals-00750",
      "spring-boot-2.x-to-3.0-removals-00760",
      "spring-boot-2.x-to-3.0-removals-00770",
      "spring-boot-2.x-to-3.0-removals-00780",
      "spring-boot-2.x-to-3.0-removals-00790",
      "spring-boot-2.x-to-3.0-removals-00800",
      "spring-boot-2.x-to-3.0-removals-00810",
      "spring-boot-2.x-to-3.0-removals-00820",
      "spring-boot-2.x-to-3.0-removals-00830",
      "spring-boot-2.x-to-3.0-removals-00840",
      "spring-boot-2.x-to-3.0-removals-00850",
      "spring-boot-2.x-to-3.0-removals-00860",
      "spring-boot-2.x-to-3.0-removals-00870",
      "spring-boot-2.x-to-3.0-removals-00880",
      "spring-boot-2.x-to-3.0-removals-00890",
      "spring-boot-2.x-to-3.0-removals-00900",
      "spring-boot-2.x-to-3.0-removals-00910",
      "spring-boot-2.x-to-3.0-removals-00920",
      "spring-boot-2.x-to-3.0-removals-00930",
      "spring-boot-2.x-to-3.0-removals-00940",
      "spring-boot-2.x-to-3.0-removals-00950",
      "spring-boot-2.x-to-3.0-removals-00960",
      "spring-boot-2.x-to-3.0-removals-00970",
      "spring-boot-2.x-to-3.0-removals-00980",
      "spring-boot-2.x-to-3.0-removals-00990",
      "spring-boot-2.x-to-3.0-removals-01000",
      "spring-boot-2.x-to-3.0-removals-01010",
      "spring-boot-2.x-to-3.0-removals-01020",
      "spring-boot-2.x-to-3.0-removals-01030",
      "spring-boot-2.x-to-3.0-removals-01040",
      "spring-boot-2.x-to-3.0-removals-01060",
      "spring-boot-2.x-to-3.0-removals-01070",
      "spring-boot-2.x-to-3.0-removals-01080",
      "spring-boot-2.x-to-3.0-removals-01090",
      "spring-boot-2.x-to-3.0-removals-01100",
      "spring-boot-2.x-to-3.0-removals-01110",
      "spring-boot-2.x-to-3.0-removals-01120",
      "spring-boot-2.x-to-3.0-removals-01140",
      "spring-boot-2.x-to-3.0-removals-01150",
      "spring-boot-2.x-to-3.0-removals-01160",
      "spring-boot-2.x-to-3.0-removals-01170",
      "spring-boot-2.x-to-3.0-removals-01180",
      "spring-boot-2.x-to-3.0-removals-01190",
      "spring-boot-2.x-to-3.0-removals-01200",
      "spring-boot-2.x-to-3.0-security-00000",
      "spring-boot-2.x-to-3.0-security-00010",
      "spring-boot-2.x-to-3.0-session-00000",
      "spring-boot-2.x-to-3.0-webapp-changes-00000",
      "spring-boot-2.x-to-3.0-webapp-changes-00010"
    ]
  },
  {
    "name": "spring-framework",
    "description": "Ruleset for migration of Spring Framework versions",
    "skipped": [
      "spring-framework-5.x-to-6.0-baseline-00001",
      "spring-framework-5.x-to-6.0-baseline-00010",
      "spring-framework-5.x-to-6.0-core-container-00001",
      "spring-framework-5.x-to-6.0-core-container-00010",
      "spring-framework-5.x-to-6.0-core-container-00020",
      "spring-framework-5.x-to-6.0-core-container-00030",
      "spring-framework-5.x-to-6.0-data-access-00001",
      "spring-framework-5.x-to-6.0-data-access-00002",
      "spring-framework-5.x-to-6.0-data-access-00003",
      "spring-framework-5.x-to-6.0-data-access-00010",
      "spring-framework-5.x-to-6.0-data-access-00020",
      "spring-framework-5.x-to-6.0-data-access-00030",
      "spring-framework-5.x-to-6.0-removed-apis-00001",
      "spring-framework-5.x-to-6.0-security-deprecations-00000",
      "spring-framework-5.x-to-6.0-security-deprecations-00010",
      "spring-framework-5.x-to-6.0-security-deprecations-00020",
      "spring-framework-5.x-to-6.0-security-deprecations-00030",
      "spring-framework-5.x-to-6.0-security-deprecations-00040",
      "spring-framework-5.x-to-6.0-security-deprecations-00050",
      "spring-framework-5.x-to-6.0-security-deprecations-00060",
      "spring-framework-5.x-to-6.0-security-deprecations-00070",
      "spring-framework-5.x-to-6.0-security-deprecations-00080",
      "spring-framework-5.x-to-6.0-security-deprecations-00090",
      "spring-framework-5.x-to-6.0-security-deprecations-00100",
      "spring-framework-5.x-to-6.0-security-deprecations-00110",
      "spring-framework-5.x-to-6.0-security-deprecations-00140",
      "spring-framework-5.x-to-6.0-security-deprecations-00160",
      "spring-framework-5.x-to-6.0-security-deprecations-00180",
      "spring-framework-5.x-to-6.0-security-deprecations-00190",
      "spring-framework-5.x-to-6.0-security-00001",
      "spring-framework-5.x-to-6.0-security-00010",
      "spring-framework-5.x-to-6.0-security-00020",
      "spring-framework-5.x-to-6.0-security-00030",
      "spring-framework-5.x-to-6.0-security-00040",
      "spring-framework-5.x-to-6.0-security-00050",
      "spring-framework-5.x-to-6.0-security-00060",
      "spring-framework-5.x-to-6.0-security-00070",
      "spring-framework-5.x-to-6.0-security-00080",
      "spring-framework-5.x-to-6.0-security-00090",
      "spring-framework-5.x-to-6.0-security-00100",
      "spring-framework-5.x-to-6.0-security-00110",
      "spring-framework-5.x-to-6.0-security-00120",
      "spring-framework-5.x-to-6.0-security-00130",
      "spring-framework-5.x-to-6.0-security-00135",
      "spring-framework-5.x-to-6.0-security-00140",
      "spring-framework-5.x-to-6.0-security-00150",
      "spring-framework-5.x-to-6.0-security-00160",
      "spring-framework-5.x-to-6.0-security-00170",
      "spring-framework-5.x-to-6.0-security-00180",
      "spring-framework-5.x-to-6.0-security-00190",
      "spring-framework-5.x-to-6.0-web-applications-00001",
      "spring-framework-5.x-to-6.0-web-applications-00010",
      "spring-framework-5.x-to-6.0-web-applications-00030",
      "spring-framework-5.x-to-6.0-web-applications-00040"
    ]
  },
  {
    "name": "technology-usage",
    "description": "This ruleset provides analysis of logging libraries.",
    "tags": [
      "Spring Boot Configuration",
      "Spring Boot Auto-configuration",
      "Spring Boot Component Scan",
      "Application Properties File",
      "Application properties file detected",
      "Spring Properties",
      "Spring datasource properties detected",
      "AMQP Client",
      "Embedded library - AMQP Client",
      "Spring Data JPA",
      "Embedded Spring Data JPA",
      "PostgreSQL Driver",
      "RabbitMQ Client",
      "Embedded library - RabbitMQ Client",
      "Spring DI",
      "Embedded framework - Spring DI",
      "Spring Web",
      "Embedded framework - Spring Web",
      "Common Annotations",
      "Spring MVC",
      "Embedded framework - Spring MVC",
      "Store=JPA named queries",
      "Persistence=JPA named queries",
      "Java EE=JPA named queries",
      "Sustain=Properties",
      "Embedded=Properties",
      "Other=Properties",
      "View=Spring MVC",
      "Embedded=Spring MVC",
      "MVC=Spring MVC",
      "Connect=Common Annotations",
      "Other=Common Annotations",
      "Java EE=Common Annotations",
      "Execute=Spring DI",
      "Embedded=Spring DI",
      "Inversion of Control=Spring DI",
      "View=Spring Web",
      "Web=Spring Web",
      "Embedded=Spring Web",
      "Store=PostgreSQL Driver",
      "Database Driver=PostgreSQL Driver",
      "Embedded=PostgreSQL Driver",
      "Store=Spring Data JPA",
      "Persistence=Spring Data JPA",
      "Embedded=Spring Data JPA",
      "Connect=RabbitMQ Client",
      "Embedded=RabbitMQ Client",
      "Other=RabbitMQ Client",
      "Connect=AMQP Client",
      "Embedded=AMQP Client",
      "Other=AMQP Client",
      "Sustain=Application Properties File",
      "Configuration Management=Application Properties File",
      "Embedded=Application Properties File",
      "Sustain=Spring Properties",
      "Configuration Management=Spring Properties",
      "Embedded=Spring Properties",
      "Sustain=Spring Boot Auto-configuration",
      "Embedded=Spring Boot Auto-configuration",
      "Configuration Management=Spring Boot Auto-configuration",
      "Sustain=Spring Boot Configuration",
      "Embedded=Spring Boot Configuration",
      "Configuration Management=Spring Boot Configuration",
      "Sustain=Spring Boot Component Scan",
      "Embedded=Spring Boot Component Scan",
      "Configuration Management=Spring Boot Component Scan"
    ],
    "insights": {
      "3rd-party-spring-03001": {
        "description": "Embedded framework - Spring Boot",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Spring Boot Configuration",
          "tag=Spring Boot Auto-configuration",
          "tag=Spring Boot Component Scan"
        ],
        "incidents": [
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
            "message": "",
            "lineNumber": 8,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
              "kind": "Class",
              "name": "SpringBootApplication",
              "package": "com.microsoft.migration.assets"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
            "message": "",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
              "kind": "Class",
              "name": "SpringBootApplication",
              "package": "com.microsoft.migration.assets.worker"
            }
          }
        ]
      },
      "configuration-management-0200": {
        "description": "Application properties file detected",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Application Properties File",
          "tag=Application properties file detected"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Application properties file detected"
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Application properties file detected"
          }
        ]
      },
      "configuration-management-0300": {
        "description": "Spring datasource properties detected",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Spring datasource properties detected",
          "tag=Spring Properties"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 20,
            "variables": {
              "matchingText": "spring.datasource"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 21,
            "variables": {
              "matchingText": "spring.datasource"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 22,
            "variables": {
              "matchingText": "spring.datasource"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 17,
            "variables": {
              "matchingText": "spring.datasource"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 18,
            "variables": {
              "matchingText": "spring.datasource"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "Spring datasource properties detected",
            "lineNumber": 19,
            "variables": {
              "matchingText": "spring.datasource"
            }
          }
        ]
      },
      "configuration-management-technology-usage-0200": {
        "description": "Application Properties File",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Sustain=Application Properties File",
          "tag=Configuration Management=Application Properties File",
          "tag=Embedded=Application Properties File"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Application Properties File"
              ]
            }
          }
        ]
      },
      "configuration-management-technology-usage-0300": {
        "description": "Spring Properties",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Sustain=Spring Properties",
          "tag=Configuration Management=Spring Properties",
          "tag=Embedded=Spring Properties"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Properties"
              ]
            }
          }
        ]
      },
      "connect-01800": {
        "description": "Embedded library - RabbitMQ Client",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=RabbitMQ Client",
          "tag=Embedded library - RabbitMQ Client"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 14,
            "variables": {
              "matchingText": "rabbitmq.host"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 16,
            "variables": {
              "matchingText": "rabbitmq.username"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 17,
            "variables": {
              "matchingText": "rabbitmq.password"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 11,
            "variables": {
              "matchingText": "rabbitmq.host"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 13,
            "variables": {
              "matchingText": "rabbitmq.username"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/src/main/resources/application.properties",
            "message": "",
            "lineNumber": 14,
            "variables": {
              "matchingText": "rabbitmq.password"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
            "message": "",
            "lineNumber": 3,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\AssetsManagerApplication.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.EnableRabbit",
              "package": "com.microsoft.migration.assets"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
            "message": "",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.connection.ConnectionFactory",
              "package": "com.microsoft.migration.assets.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
            "message": "",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory",
              "package": "com.microsoft.migration.assets.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
            "message": "",
            "lineNumber": 8,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\AwsS3Service.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.core.RabbitTemplate",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\BackupMessageProcessor.java",
            "message": "",
            "lineNumber": 6,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\BackupMessageProcessor.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.RabbitListener",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
            "message": "",
            "lineNumber": 7,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.core.RabbitTemplate",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
            "message": "",
            "lineNumber": 3,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\WorkerApplication.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.EnableRabbit",
              "package": "com.microsoft.migration.assets.worker"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
            "message": "",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.config.SimpleRabbitListenerContainerFactory",
              "package": "com.microsoft.migration.assets.worker.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
            "message": "",
            "lineNumber": 10,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\config\\RabbitConfig.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.connection.ConnectionFactory",
              "package": "com.microsoft.migration.assets.worker.config"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
            "message": "",
            "lineNumber": 7,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\AbstractFileProcessingService.java",
              "kind": "Module",
              "name": "org.springframework.amqp.rabbit.annotation.RabbitListener",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          }
        ]
      },
      "connect-02300": {
        "description": "Embedded library - AMQP Client",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=AMQP Client",
          "tag=Embedded library - AMQP Client"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "",
            "lineNumber": 31,
            "variables": {
              "name": "org.springframework.boot.spring-boot-starter-amqp",
              "version": "2.7.18"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.boot.spring-boot-starter-amqp",
              "version": "2.7.18"
            }
          }
        ]
      },
      "database-01700": {
        "description": "PostgreSQL database found",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=PostgreSQL Driver"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "PostgreSQL database found",
            "lineNumber": 53,
            "variables": {
              "name": "org.postgresql.postgresql",
              "version": "42.3.8"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "PostgreSQL database found",
            "lineNumber": 64,
            "variables": {
              "name": "org.postgresql.postgresql",
              "version": "42.3.8"
            }
          },
          {
            "uri": "",
            "message": "PostgreSQL database found"
          }
        ]
      },
      "database-03000": {
        "description": "Embedded Spring Data JPA",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Spring Data JPA",
          "tag=Embedded Spring Data JPA"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "",
            "lineNumber": 49,
            "variables": {
              "name": "org.springframework.data.spring-data-jpa",
              "version": "2.7.18"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "",
            "lineNumber": 60,
            "variables": {
              "name": "org.springframework.data.spring-data-jpa",
              "version": "2.7.18"
            }
          }
        ]
      },
      "embedded-framework-08200": {
        "description": "Embedded framework - Spring DI",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Spring DI",
          "tag=Embedded framework - Spring DI"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/worker/pom.xml",
            "message": "The application embeds a Spring DI library.",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.spring-beans",
              "version": "5.3.31"
            }
          },
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "The application embeds a Spring DI library.",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.spring-beans",
              "version": "5.3.31"
            }
          }
        ]
      },
      "embedded-framework-08400": {
        "description": "Embedded framework - Spring Web",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Embedded framework - Spring Web",
          "tag=Spring Web"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "The application embeds the Spring Web framework.",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.spring-web",
              "version": "5.3.31"
            }
          }
        ]
      },
      "javaee-technology-usage-00080": {
        "description": "Common Annotations",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Common Annotations"
        ],
        "incidents": [
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
            "message": "",
            "lineNumber": 14,
            "variables": {
              "annotation": "",
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\service\\LocalFileStorageService.java",
              "kind": "Module",
              "name": "javax.annotation.PostConstruct",
              "package": "com.microsoft.migration.assets.service"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
            "message": "",
            "lineNumber": 6,
            "variables": {
              "annotation": "",
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\service\\LocalFileProcessingService.java",
              "kind": "Module",
              "name": "javax.annotation.PostConstruct",
              "package": "com.microsoft.migration.assets.worker.service"
            }
          }
        ]
      },
      "javaee-technology-usage-00180": {
        "description": "Common Annotations",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Java EE=Common Annotations",
          "tag=Connect=Common Annotations",
          "tag=Other=Common Annotations"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Common Annotations"
              ]
            }
          }
        ]
      },
      "mvc-01220": {
        "description": "Embedded framework - Spring MVC",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Spring MVC",
          "tag=Embedded framework - Spring MVC"
        ],
        "incidents": [
          {
            "uri": "file:///c:/projects/asset-manager/demo/java-migration-copilot-samples/asset-manager/web/pom.xml",
            "message": "",
            "lineNumber": 27,
            "variables": {
              "name": "org.springframework.spring-webmvc",
              "version": "5.3.31"
            }
          }
        ]
      },
      "non-xml-technology-usage-20000": {
        "description": "Properties",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Other=Properties",
          "tag=Sustain=Properties",
          "tag=Embedded=Properties"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Properties"
              ]
            }
          }
        ]
      },
      "technology-usage-3rd-party-spring-03001-0": {
        "description": "Spring Boot Configuration",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Embedded=Spring Boot Configuration",
          "tag=Configuration Management=Spring Boot Configuration",
          "tag=Sustain=Spring Boot Configuration"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Boot Configuration"
              ]
            }
          }
        ]
      },
      "technology-usage-3rd-party-spring-03001-1": {
        "description": "Spring Boot Auto-configuration",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Sustain=Spring Boot Auto-configuration",
          "tag=Embedded=Spring Boot Auto-configuration",
          "tag=Configuration Management=Spring Boot Auto-configuration"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Boot Auto-configuration"
              ]
            }
          }
        ]
      },
      "technology-usage-3rd-party-spring-03001-2": {
        "description": "Spring Boot Component Scan",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Sustain=Spring Boot Component Scan",
          "tag=Embedded=Spring Boot Component Scan",
          "tag=Configuration Management=Spring Boot Component Scan"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Boot Component Scan"
              ]
            }
          }
        ]
      },
      "technology-usage-connect-01800": {
        "description": "RabbitMQ Client",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Other=RabbitMQ Client",
          "tag=Connect=RabbitMQ Client",
          "tag=Embedded=RabbitMQ Client"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "RabbitMQ Client"
              ]
            }
          }
        ]
      },
      "technology-usage-connect-02300": {
        "description": "AMQP Client",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Connect=AMQP Client",
          "tag=Embedded=AMQP Client",
          "tag=Other=AMQP Client"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "AMQP Client"
              ]
            }
          }
        ]
      },
      "technology-usage-database-01200": {
        "description": "JPA Queries",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Persistence=JPA named queries",
          "tag=Java EE=JPA named queries",
          "tag=Store=JPA named queries"
        ],
        "incidents": [
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\model\\ImageMetadata.java",
            "message": "",
            "lineNumber": 9,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\web\\src\\main\\java\\com\\microsoft\\migration\\assets\\model\\ImageMetadata.java",
              "kind": "Class",
              "name": "Entity",
              "package": "com.microsoft.migration.assets.model"
            }
          },
          {
            "uri": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\model\\ImageMetadata.java",
            "message": "",
            "lineNumber": 12,
            "variables": {
              "file": "file:///C:\\projects\\asset-manager\\demo\\java-migration-copilot-samples\\asset-manager\\worker\\src\\main\\java\\com\\microsoft\\migration\\assets\\worker\\model\\ImageMetadata.java",
              "kind": "Class",
              "name": "Entity",
              "package": "com.microsoft.migration.assets.worker.model"
            }
          }
        ]
      },
      "technology-usage-database-01700": {
        "description": "PostgreSQL Driver",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Database Driver=PostgreSQL Driver",
          "tag=Embedded=PostgreSQL Driver",
          "tag=Store=PostgreSQL Driver"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "PostgreSQL Driver"
              ]
            }
          }
        ]
      },
      "technology-usage-database-03100": {
        "description": "Spring Data JPA",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Embedded=Spring Data JPA",
          "tag=Store=Spring Data JPA",
          "tag=Persistence=Spring Data JPA"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Data JPA"
              ]
            }
          }
        ]
      },
      "technology-usage-embedded-framework-08200": {
        "description": "Spring DI",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=Execute=Spring DI",
          "tag=Embedded=Spring DI",
          "tag=Inversion of Control=Spring DI"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring DI"
              ]
            }
          }
        ]
      },
      "technology-usage-embedded-framework-08400": {
        "description": "Spring Web",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=View=Spring Web",
          "tag=Web=Spring Web",
          "tag=Embedded=Spring Web"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring Web"
              ]
            }
          }
        ]
      },
      "technology-usage-mvc-01200": {
        "description": "Spring MVC",
        "labels": [
          "konveyor.io/include=always",
          "discovery",
          "tag=View=Spring MVC",
          "tag=Embedded=Spring MVC",
          "tag=MVC=Spring MVC"
        ],
        "incidents": [
          {
            "uri": "",
            "message": "",
            "variables": {
              "tags": [
                "Spring MVC"
              ]
            }
          }
        ]
      }
    },
    "unmatched": [
      "technology-usage-web-01400",
      "3rd-party-02000",
      "3rd-party-01000",
      "3rd-party-04000",
      "3rd-party-06000",
      "3rd-party-07000",
      "3rd-party-08000",
      "3rd-party-09000",
      "3rd-party-10000",
      "3rd-party-11000",
      "3rd-party-spring-03002",
      "3rd-party-12000",
      "3rd-party-13000",
      "3rd-party-14000",
      "3rd-party-15000",
      "3rd-party-16000",
      "3rd-party-17000",
      "3rd-party-18000",
      "3rd-party-19000",
      "3rd-party-30400",
      "3rd-party-30600",
      "3rd-party-30500",
      "3rd-party-30300",
      "3rd-party-30100",
      "3rd-party-30000",
      "3rd-party-30200",
      "apm-usage-00001",
      "apm-usage-00000",
      "apm-usage-00002",
      "3rd-party-03000",
      "3rd-party-05000",
      "configuration-management-0500",
      "3rd-party-20000",
      "configuration-management-0100",
      "configuration-management-0400",
      "clustering-usage-00000",
      "connect-01400",
      "apm-usage-00003",
      "connect-01600",
      "connect-01700",
      "configuration-management-0600",
      "connect-02000",
      "connect-02100",
      "technology-usage-security-01000",
      "connect-02200",
      "connect-01500",
      "connect-02400",
      "connect-01900",
      "clustering-usage-00001",
      "connect-02800",
      "connect-02700",
      "connect-02600",
      "database-01400",
      "connect-02500",
      "database-01600",
      "database-01800",
      "database-01900",
      "database-02300",
      "database-02000",
      "connect-02900",
      "database-01500",
      "database-02700",
      "database-02600",
      "database-02800",
      "database-02900",
      "database-03200",
      "embedded-framework-01000",
      "embedded-framework-01100",
      "embedded-framework-01200",
      "embedded-framework-01010",
      "embedded-framework-01300",
      "embedded-framework-01400",
      "embedded-framework-01500",
      "embedded-framework-01600",
      "embedded-framework-01700",
      "embedded-framework-02000",
      "ejb-01000",
      "embedded-framework-02300",
      "embedded-framework-02200",
      "embedded-framework-02400",
      "embedded-framework-03000",
      "embedded-framework-03100",
      "database-02500",
      "embedded-framework-03200",
      "embedded-framework-03300",
      "embedded-framework-03400",
      "embedded-framework-04700",
      "embedded-framework-05000",
      "embedded-framework-05100",
      "embedded-framework-05400",
      "embedded-framework-05600",
      "embedded-framework-05500",
      "embedded-framework-05700",
      "embedded-framework-05800",
      "embedded-framework-05900",
      "embedded-framework-06000",
      "embedded-framework-05300",
      "database-02200",
      "embedded-framework-06100",
      "embedded-framework-06400",
      "embedded-framework-06300",
      "embedded-framework-06200",
      "embedded-framework-06500",
      "embedded-framework-06600",
      "database-02100",
      "embedded-framework-06700",
      "embedded-framework-06800",
      "embedded-framework-06900",
      "embedded-framework-07000",
      "embedded-framework-07200",
      "embedded-framework-07100",
      "embedded-framework-07300",
      "embedded-framework-08300",
      "embedded-framework-08500",
      "embedded-framework-08700",
      "embedded-framework-08800",
      "embedded-framework-07400",
      "embedded-framework-07600",
      "embedded-framework-07500",
      "embedded-framework-07700",
      "embedded-framework-07900",
      "embedded-framework-07800",
      "embedded-framework-08000",
      "embedded-framework-08100",
      "embedded-framework-08600",
      "embedded-framework-09000",
      "embedded-framework-08900",
      "embedded-framework-09100",
      "embedded-framework-09400",
      "integration-00001",
      "integration-00002",
      "integration-00003",
      "integration-00004",
      "integration-00005",
      "integration-00006",
      "integration-00007",
      "integration-00008",
      "integration-00017",
      "embedded-framework-09300",
      "integration-00009",
      "javase-01100",
      "integration-00010",
      "integration-00011",
      "javase-01000",
      "integration-00013",
      "integration-00012",
      "integration-00014",
      "integration-00015",
      "jta-00020",
      "jta-00030",
      "jta-00040",
      "jta-00050",
      "jta-00060",
      "jta-00080",
      "jta-00070",
      "jta-00090",
      "jta-00100",
      "integration-00016",
      "jta-00110",
      "jta-00120",
      "jta-00130",
      "jta-00140",
      "javaee-technology-usage-00020-javax",
      "javaee-technology-usage-00020-jakarta",
      "javaee-technology-usage-00030",
      "javaee-technology-usage-00040",
      "javaee-technology-usage-00050",
      "jta-00150",
      "javaee-technology-usage-00070",
      "javaee-technology-usage-00010",
      "javaee-technology-usage-00100",
      "javaee-technology-usage-00090",
      "javaee-technology-usage-00110",
      "javaee-technology-usage-00060",
      "javaee-technology-usage-00120",
      "javaee-technology-usage-00130",
      "jta-00160",
      "jta-00210",
      "jta-00180",
      "jta-00200",
      "jta-00190",
      "javaee-technology-usage-00011",
      "javaee-technology-usage-00903",
      "javaee-technology-usage-00905",
      "javaee-technology-usage-00902",
      "javaee-technology-usage-00906",
      "javaee-technology-usage-00910",
      "javaee-technology-usage-00911",
      "javaee-technology-usage-00912",
      "javaee-technology-usage-00913",
      "javaee-technology-usage-00914",
      "javaee-technology-usage-00916",
      "javaee-technology-usage-00917",
      "javaee-technology-usage-00915",
      "javaee-technology-usage-00918",
      "javaee-technology-usage-00926",
      "logging-usage-00020",
      "logging-usage-00010",
      "javaee-technology-usage-00927",
      "logging-usage-00030",
      "javaee-technology-usage-00928",
      "javaee-technology-usage-00930",
      "logging-usage-00040",
      "javaee-technology-usage-00931",
      "javaee-technology-usage-00932",
      "logging-usage-00080",
      "logging-usage-00050",
      "jta-00170",
      "logging-usage-00090",
      "logging-usage-00100",
      "logging-usage-00110",
      "logging-usage-00120",
      "logging-usage-00140",
      "logging-usage-00130",
      "logging-usage-00150",
      "logging-usage-00180",
      "logging-usage-00160",
      "logging-usage-00190",
      "logging-usage-00170",
      "logging-usage-00200",
      "logging-usage-00210",
      "logging-usage-00310",
      "logging-usage-00220",
      "logging-usage-00230",
      "logging-usage-00240",
      "logging-usage-00250",
      "logging-usage-00270",
      "mvc-01210",
      "logging-usage-00260",
      "logging-usage-00280",
      "logging-usage-00290",
      "mvc-01000",
      "logging-usage-00300",
      "mvc-01100",
      "mvc-01200",
      "mvc-01300",
      "mvc-01500",
      "mvc-01400",
      "mvc-01600",
      "mvc-01700",
      "mvc-01800",
      "mvc-01900",
      "mvc-02000",
      "mvc-02100",
      "mvc-02200",
      "mvc-02600",
      "mvc-02400",
      "mvc-02500",
      "mvc-02700",
      "mvc-02800",
      "mvc-02900",
      "mvc-03000",
      "mvc-03100",
      "mvc-03200",
      "mvc-02300",
      "mvc-03400",
      "mvc-03300",
      "mvc-03500",
      "mvc-03600",
      "mvc-03700",
      "mvc-03900",
      "mvc-03800",
      "mvc-04000",
      "mvc-04100",
      "mvc-04500",
      "mvc-04200",
      "mvc-04400",
      "mvc-04300",
      "mvc-04600",
      "mvc-04700",
      "mvc-04900",
      "mvc-04800",
      "mvc-05000",
      "observability-0100",
      "mvc-05200",
      "mvc-05300",
      "mvc-05400",
      "mvc-05500",
      "mvc-05600",
      "mvc-05700",
      "mvc-05800",
      "mvc-05900",
      "mvc-06000",
      "security-01100",
      "security-01200",
      "security-01300",
      "security-01400",
      "security-01500",
      "security-01600",
      "security-01900",
      "security-01800",
      "security-01700",
      "observability-0200",
      "security-02200",
      "security-02100",
      "security-02300",
      "security-02400",
      "security-02500",
      "security-02600",
      "security-02700",
      "security-03600",
      "security-02800",
      "security-02900",
      "security-03000",
      "security-03100",
      "security-03200",
      "security-03300",
      "security-03400",
      "security-03700",
      "security-03500",
      "spring-catchall-00001",
      "test-frameworks-sauge-00010",
      "test-frameworks-sauge-00020",
      "test-frameworks-sauge-00030",
      "test-frameworks-sauge-00040",
      "test-frameworks-sauge-00060",
      "test-frameworks-sauge-00070",
      "test-frameworks-sauge-00050",
      "security-03800",
      "test-frameworks-sauge-00080",
      "test-frameworks-sauge-00090",
      "test-frameworks-sauge-00110",
      "test-frameworks-sauge-00100",
      "test-frameworks-sauge-00120",
      "test-frameworks-sauge-00130",
      "test-frameworks-sauge-00150",
      "test-frameworks-sauge-00140",
      "test-frameworks-sauge-00160",
      "test-frameworks-sauge-00170",
      "test-frameworks-sauge-00180",
      "test-frameworks-sauge-00190",
      "test-frameworks-sauge-00200",
      "test-frameworks-sauge-00210",
      "test-frameworks-sauge-00220",
      "test-frameworks-sauge-00230",
      "test-frameworks-sauge-00240",
      "test-frameworks-sauge-00560",
      "test-frameworks-sauge-00260",
      "test-frameworks-sauge-00270",
      "security-02000",
      "test-frameworks-sauge-00280",
      "test-frameworks-sauge-00290",
      "test-frameworks-sauge-00300",
      "test-frameworks-sauge-00310",
      "test-frameworks-sauge-00330",
      "test-frameworks-sauge-00320",
      "test-frameworks-sauge-00340",
      "test-frameworks-sauge-00350",
      "test-frameworks-sauge-00360",
      "test-frameworks-sauge-00370",
      "embedded-cache-libraries-01000",
      "embedded-cache-libraries-16000",
      "embedded-cache-libraries-02000",
      "embedded-cache-libraries-03000",
      "embedded-cache-libraries-05000",
      "embedded-cache-libraries-04000",
      "embedded-cache-libraries-15000",
      "technology-usage-database-01000",
      "embedded-cache-libraries-06000",
      "embedded-cache-libraries-07000",
      "embedded-cache-libraries-08000",
      "embedded-cache-libraries-10000",
      "embedded-cache-libraries-09000",
      "embedded-cache-libraries-11000",
      "embedded-cache-libraries-12000",
      "technology-usage-connect-01101",
      "technology-usage-connect-01200",
      "embedded-cache-libraries-13000",
      "embedded-cache-libraries-14000",
      "technology-usage-web-01300",
      "technology-usage-database-01300",
      "technology-usage-connect-01100",
      "technology-usage-connect-01000",
      "technology-usage-web-01400",
      "web-01000",
      "technology-usage-web-01500",
      "technology-usage-web-01800",
      "technology-usage-web-01700",
      "technology-usage-web-01900",
      "technology-usage-web-02500",
      "technology-usage-web-02600",
      "technology-usage-web-02200",
      "technology-usage-web-02100",
      "technology-usage-web-01100",
      "technology-usage-web-02000",
      "technology-usage-database-01100",
      "technology-usage-web-01600",
      "technology-usage-web-02300",
      "technology-usage-connect-01300",
      "technology-usage-web-02400",
      "technology-usage-web-02100",
      "technology-usage-web-01300",
      "technology-usage-web-01100",
      "technology-usage-web-01200",
      "technology-usage-web-02200",
      "technology-usage-web-02000",
      "technology-usage-web-01500",
      "technology-usage-web-01000",
      "technology-usage-web-01700",
      "technology-usage-web-01800",
      "technology-usage-web-01900",
      "technology-usage-web-02300",
      "technology-usage-web-02400",
      "technology-usage-test-frameworks-00010",
      "technology-usage-test-frameworks-00020",
      "technology-usage-test-frameworks-00030",
      "technology-usage-test-frameworks-00040",
      "technology-usage-test-frameworks-00050",
      "technology-usage-test-frameworks-00060",
      "technology-usage-test-frameworks-00070",
      "technology-usage-test-frameworks-00080",
      "technology-usage-test-frameworks-00090",
      "technology-usage-test-frameworks-00100",
      "technology-usage-test-frameworks-00120",
      "technology-usage-test-frameworks-00110",
      "technology-usage-test-frameworks-00130",
      "technology-usage-test-frameworks-00140",
      "technology-usage-test-frameworks-00150",
      "technology-usage-test-frameworks-00160",
      "technology-usage-test-frameworks-00170",
      "technology-usage-test-frameworks-00180",
      "technology-usage-test-frameworks-00200",
      "technology-usage-test-frameworks-00190",
      "technology-usage-test-frameworks-00210",
      "technology-usage-test-frameworks-00220",
      "technology-usage-test-frameworks-00230",
      "technology-usage-test-frameworks-00240",
      "technology-usage-test-frameworks-00250",
      "technology-usage-test-frameworks-00260",
      "technology-usage-test-frameworks-00270",
      "technology-usage-test-frameworks-00280",
      "technology-usage-test-frameworks-00290",
      "technology-usage-test-frameworks-00300",
      "technology-usage-test-frameworks-00310",
      "technology-usage-test-frameworks-00320",
      "technology-usage-test-frameworks-00330",
      "technology-usage-test-frameworks-00340",
      "technology-usage-test-frameworks-00350",
      "technology-usage-test-frameworks-00360",
      "technology-usage-test-frameworks-00370",
      "technology-usage-security-01200",
      "technology-usage-security-01100",
      "technology-usage-security-01300",
      "technology-usage-security-01400",
      "technology-usage-security-01600",
      "technology-usage-security-01500",
      "technology-usage-security-01800",
      "technology-usage-security-01700",
      "technology-usage-security-01900",
      "technology-usage-security-02000",
      "technology-usage-security-02800",
      "technology-usage-security-02100",
      "technology-usage-security-03000",
      "technology-usage-security-02900",
      "technology-usage-security-02200",
      "technology-usage-security-02400",
      "technology-usage-security-02300",
      "technology-usage-security-03100",
      "technology-usage-security-02500",
      "technology-usage-security-02600",
      "technology-usage-security-02700",
      "technology-usage-security-03200",
      "technology-usage-security-03300",
      "technology-usage-security-03400",
      "technology-usage-security-03500",
      "observability-technology-usage-0100",
      "non-xml-technology-usage-02000",
      "observability-technology-usage-0200",
      "non-xml-technology-usage-05000",
      "non-xml-technology-usage-06000",
      "non-xml-technology-usage-12000",
      "non-xml-technology-usage-13000",
      "non-xml-technology-usage-14000",
      "non-xml-technology-usage-17000",
      "non-xml-technology-usage-18000",
      "non-xml-technology-usage-19000",
      "non-xml-technology-usage-21000",
      "non-xml-technology-usage-22000",
      "non-xml-technology-usage-23000",
      "non-xml-technology-usage-24000",
      "non-xml-technology-usage-25000",
      "non-xml-technology-usage-26000",
      "non-xml-technology-usage-27000",
      "technology-usage-mvc-01000",
      "technology-usage-mvc-01100",
      "technology-usage-mvc-01300",
      "technology-usage-mvc-01400",
      "technology-usage-mvc-01500",
      "technology-usage-mvc-01600",
      "technology-usage-mvc-01700",
      "technology-usage-mvc-01800",
      "technology-usage-mvc-01900",
      "technology-usage-mvc-02000",
      "technology-usage-mvc-02100",
      "technology-usage-mvc-02200",
      "technology-usage-mvc-02300",
      "technology-usage-mvc-02400",
      "technology-usage-mvc-02500",
      "technology-usage-mvc-02700",
      "technology-usage-mvc-02600",
      "technology-usage-mvc-02800",
      "technology-usage-mvc-03000",
      "technology-usage-mvc-02900",
      "technology-usage-mvc-03100",
      "technology-usage-mvc-03200",
      "technology-usage-mvc-03300",
      "technology-usage-mvc-03400",
      "technology-usage-mvc-03600",
      "technology-usage-mvc-03500",
      "technology-usage-mvc-03700",
      "technology-usage-mvc-03800",
      "technology-usage-mvc-03900",
      "technology-usage-mvc-04000",
      "technology-usage-mvc-04100",
      "technology-usage-mvc-0x4200",
      "technology-usage-mvc-04300",
      "technology-usage-mvc-04400",
      "technology-usage-mvc-04500",
      "technology-usage-mvc-04600",
      "technology-usage-mvc-04700",
      "technology-usage-mvc-04800",
      "technology-usage-mvc-04900",
      "technology-usage-mvc-05000",
      "technology-usage-mvc-05100",
      "technology-usage-mvc-05200",
      "technology-usage-mvc-05300",
      "technology-usage-mvc-05400",
      "technology-usage-mvc-05500",
      "technology-usage-mvc-05600",
      "technology-usage-mvc-05700",
      "technology-usage-mvc-05800",
      "technology-usage-mvc-05900",
      "technology-usage-mvc-06000",
      "technology-usage-markup-01300",
      "technology-usage-logging-00010",
      "technology-usage-logging-00020",
      "technology-usage-logging-00030",
      "technology-usage-logging-00040",
      "technology-usage-logging-00050",
      "technology-usage-logging-00060",
      "technology-usage-logging-00070",
      "technology-usage-logging-00090",
      "technology-usage-logging-00080",
      "technology-usage-logging-000110",
      "technology-usage-logging-000100",
      "technology-usage-logging-000120",
      "technology-usage-logging-000140",
      "technology-usage-logging-000130",
      "technology-usage-logging-000150",
      "technology-usage-logging-000160",
      "technology-usage-logging-000170",
      "technology-usage-logging-000180",
      "technology-usage-logging-000190",
      "technology-usage-logging-000200",
      "technology-usage-logging-000220",
      "technology-usage-logging-000210",
      "technology-usage-logging-000230",
      "technology-usage-logging-000240",
      "technology-usage-logging-000250",
      "technology-usage-logging-000270",
      "technology-usage-logging-000260",
      "technology-usage-logging-000280",
      "technology-usage-logging-000290",
      "technology-usage-jta-00020",
      "technology-usage-jta-00030",
      "technology-usage-jta-00040",
      "technology-usage-jta-00050",
      "technology-usage-jta-00060",
      "technology-usage-jta-00070",
      "technology-usage-jta-00080",
      "technology-usage-jta-00090",
      "technology-usage-jta-00110",
      "technology-usage-jta-00100",
      "technology-usage-jta-00120",
      "technology-usage-jta-00130",
      "technology-usage-jta-00140",
      "technology-usage-jta-00150",
      "technology-usage-jta-00160",
      "technology-usage-jta-00170",
      "technology-usage-jta-00180",
      "technology-usage-jta-00190",
      "javase-technology-usage-01000",
      "technology-usage-jta-00200",
      "javaee-technology-usage-00012",
      "javaee-technology-usage-00013",
      "technology-usage-jta-00210",
      "javaee-technology-usage-00021",
      "javaee-technology-usage-00140",
      "javaee-technology-usage-00031",
      "javaee-technology-usage-00190",
      "javaee-technology-usage-00160",
      "javaee-technology-usage-00150",
      "javaee-technology-usage-00170",
      "javaee-technology-usage-00200",
      "javaee-technology-usage-00210",
      "javaee-technology-usage-00220",
      "javaee-technology-usage-00230",
      "javaee-technology-usage-00950",
      "javaee-technology-usage-00951",
      "javaee-technology-usage-00953",
      "javaee-technology-usage-00952",
      "javaee-technology-usage-00954",
      "javaee-technology-usage-00955",
      "javaee-technology-usage-00956",
      "javaee-technology-usage-00957",
      "javaee-technology-usage-00958",
      "technology-usage-integration-00001",
      "technology-usage-integration-00002",
      "technology-usage-integration-00004",
      "technology-usage-integration-00005",
      "technology-usage-integration-00003",
      "technology-usage-integration-00006",
      "technology-usage-integration-00007",
      "technology-usage-integration-00008",
      "technology-usage-integration-00009",
      "technology-usage-integration-00010",
      "technology-usage-integration-00011",
      "technology-usage-integration-00012",
      "technology-usage-integration-00013",
      "technology-usage-integration-00014",
      "technology-usage-integration-00015",
      "technology-usage-embedded-framework-01000",
      "technology-usage-embedded-framework-01010",
      "technology-usage-embedded-framework-01200",
      "technology-usage-embedded-framework-01100",
      "technology-usage-embedded-framework-01400",
      "technology-usage-embedded-framework-01300",
      "technology-usage-embedded-framework-01500",
      "technology-usage-embedded-framework-01600",
      "technology-usage-embedded-framework-01700",
      "technology-usage-embedded-framework-02000",
      "technology-usage-embedded-framework-02100",
      "technology-usage-embedded-framework-02200",
      "technology-usage-embedded-framework-02300",
      "embedded-framework-embedded-framework-02700",
      "technology-usage-embedded-framework-02400",
      "embedded-framework-embedded-framework-02800",
      "embedded-framework-embedded-framework-02900",
      "embedded-framework-embedded-framework-03000",
      "embedded-framework-embedded-framework-03100",
      "embedded-framework-embedded-framework-03200",
      "embedded-framework-embedded-framework-03300",
      "embedded-framework-embedded-framework-03400",
      "embedded-framework-embedded-framework-03500",
      "embedded-framework-embedded-framework-03600",
      "embedded-framework-embedded-framework-03700",
      "embedded-framework-embedded-framework-03800",
      "embedded-framework-embedded-framework-03900",
      "embedded-framework-embedded-framework-04000",
      "embedded-framework-embedded-framework-04100",
      "embedded-framework-embedded-framework-04200",
      "embedded-framework-embedded-framework-04300",
      "embedded-framework-embedded-framework-04400",
      "embedded-framework-embedded-framework-04500",
      "embedded-framework-embedded-framework-04600",
      "technology-usage-embedded-framework-04700",
      "technology-usage-embedded-framework-05000",
      "technology-usage-embedded-framework-05100",
      "technology-usage-embedded-framework-05300",
      "technology-usage-embedded-framework-05400",
      "technology-usage-embedded-framework-05600",
      "technology-usage-embedded-framework-05700",
      "technology-usage-embedded-framework-05800",
      "technology-usage-embedded-framework-05900",
      "technology-usage-embedded-framework-06000",
      "technology-usage-embedded-framework-06100",
      "technology-usage-embedded-framework-06200",
      "technology-usage-embedded-framework-06300",
      "technology-usage-embedded-framework-06400",
      "technology-usage-embedded-framework-06500",
      "technology-usage-embedded-framework-06600",
      "technology-usage-embedded-framework-06700",
      "technology-usage-embedded-framework-06800",
      "technology-usage-embedded-framework-06900",
      "technology-usage-embedded-framework-07000",
      "technology-usage-embedded-framework-07100",
      "technology-usage-embedded-framework-07200",
      "technology-usage-embedded-framework-07300",
      "technology-usage-embedded-framework-07400",
      "technology-usage-embedded-framework-07500",
      "technology-usage-embedded-framework-07600",
      "technology-usage-embedded-framework-07700",
      "technology-usage-embedded-framework-07900",
      "technology-usage-embedded-framework-07800",
      "technology-usage-embedded-framework-08000",
      "technology-usage-embedded-framework-08100",
      "technology-usage-embedded-framework-08300",
      "technology-usage-embedded-framework-08600",
      "technology-usage-embedded-framework-08500",
      "technology-usage-embedded-framework-08700",
      "technology-usage-embedded-framework-08800",
      "technology-usage-embedded-framework-09000",
      "technology-usage-embedded-framework-08900",
      "technology-usage-embedded-framework-09100",
      "embedded-framework-embedded-framework-09200",
      "embedded-framework-embedded-framework-09300",
      "technology-usage-database-01400",
      "technology-usage-database-01500",
      "technology-usage-ejb-01400",
      "technology-usage-database-01600",
      "technology-usage-database-01800",
      "technology-usage-database-02000",
      "technology-usage-database-01900",
      "technology-usage-database-02100",
      "technology-usage-database-02200",
      "technology-usage-database-02300",
      "technology-usage-database-02400",
      "technology-usage-database-02500",
      "technology-usage-database-02600",
      "technology-usage-database-02700",
      "technology-usage-database-02800",
      "technology-usage-database-02900",
      "technology-usage-database-03000",
      "technology-usage-database-03200",
      "technology-usage-connect-01400",
      "technology-usage-connect-01500",
      "technology-usage-connect-01700",
      "technology-usage-connect-01600",
      "technology-usage-connect-01900",
      "technology-usage-connect-02000",
      "technology-usage-connect-02100",
      "technology-usage-connect-02200",
      "technology-usage-connect-02400",
      "technology-usage-connect-02500",
      "technology-usage-connect-02700",
      "technology-usage-connect-02600",
      "technology-usage-connect-02800",
      "technology-usage-connect-02900",
      "configuration-management-technology-usage-0100",
      "configuration-management-technology-usage-0400",
      "technology-usage-clustering-02000",
      "technology-usage-clustering-01000",
      "technology-usage-3rd-party-02000",
      "technology-usage-3rd-party-03000",
      "technology-usage-3rd-party-01000",
      "technology-usage-3rd-party-04000",
      "technology-usage-3rd-party-05000",
      "technology-usage-3rd-party-06000",
      "technology-usage-3rd-party-08000",
      "technology-usage-3rd-party-09000",
      "technology-usage-3rd-party-10000",
      "technology-usage-3rd-party-11000",
      "technology-usage-3rd-party-12000",
      "technology-usage-3rd-party-13000",
      "technology-usage-3rd-party-15000",
      "technology-usage-3rd-party-14000",
      "technology-usage-3rd-party-17000",
      "technology-usage-3rd-party-16000",
      "technology-usage-3rd-party-19000",
      "technology-usage-3rd-party-18000",
      "technology-usage-3rd-party-20000",
      "technology-usage-3rd-party-21000",
      "technology-usage-apm-00010",
      "technology-usage-apm-00020",
      "technology-usage-apm-00030",
      "technology-usage-apm-00040",
      "technology-usage-3rd-party-spring-03002"
    ]
  }
]